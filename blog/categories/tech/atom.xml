<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: tech | Biaobiaoqi的博客]]></title>
  <link href="http://biaobiaoqi.me/blog/categories/tech/atom.xml" rel="self"/>
  <link href="http://biaobiaoqi.me/"/>
  <updated>2013-11-07T02:33:21+08:00</updated>
  <id>http://biaobiaoqi.me/</id>
  <author>
    <name><![CDATA[Biaobiaoqi]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[PAT 1069 - 1072 题解]]></title>
    <link href="http://biaobiaoqi.me/blog/2013/11/07/pat-1069-pat-1072/"/>
    <updated>2013-11-07T00:30:00+08:00</updated>
    <id>http://biaobiaoqi.me/blog/2013/11/07/pat-1069-pat-1072</id>
    <content type="html"><![CDATA[<p>来源是 2013 年 11 月 2 日的PAT测试。</p>

<h2><a href="http://pat.zju.edu.cn/contests/pat-a-practise/1069">1069. The Black Hole of Numbers (20)</a></h2>

<h5>题意</h5>

<p>给出一个四位数比如6767，将它按照每位从小到大(6677)和从大到小(7766)充足，得到两个新四位数，这两者相减将得到一个新的四位数。再按照一样的处理方式处理得出的四位数</p>

<p>```
7766 - 6677 = 1089
9810 - 0189 = 9621
9621 - 1269 = 8352
8532 - 2358 = 6174
7641 - 1467 = 6174</p>

<p>```</p>

<p>最终将得到一个『黑洞数』：6174。</p>

<p>题目给出一个四位数，要求输出它演变出『黑洞数』的过程。</p>

<!--more-->


<h5>分析</h5>

<p>简单模拟题，需要留心两个特殊情况的处理：<code>6174</code>，<code>xxxx</code>。</p>

<p>熟练掌握 C 的基本函数也能缩短代码编写，比如<code>atoi()</code> 和 <code>sprintf()</code>， 由于<code>itoa()</code>是依赖于Windows的，这里不推荐使用。</p>

<p>pat1069源码:<a href="https://github.com/biaobiaoqi/CPractice/blob/master/PAT/advancedlevel/APAT1069.cpp">请戳</a></p>

<h2><a href="http://pat.zju.edu.cn/contests/pat-a-practise/1070">1070. Mooncake (25)</a></h2>

<h5>题意</h5>

<p>给出月饼市场的需求 D&lt;= 500 （按重量计算），给出现有 N &lt;= 1000 种月饼，每种月饼有一定数量的储备（按重量计算）以及这些储备所对应的价格，求一个出售月饼的方式，在容量D的市场里，获得最多的销售额。</p>

<h5>分析</h5>

<p>简单的贪心问题。贪心的规则是月饼的单价。注意有一个坑：每种月饼的存货量也需要用<code>double</code>来做存储。</p>

<p>pat1070源码:<a href="https://github.com/biaobiaoqi/CPractice/blob/master/PAT/advancedlevel/APAT1070.cpp">请戳</a></p>

<h2><a href="http://pat.zju.edu.cn/contests/pat-a-practise/1071">1071. Speech Patterns (25)</a></h2>

<h5>题意</h5>

<p>给出一个长度不超过 1048576 的字符串。把所有连续的字母或者数字（[0-9 A-Z a-z]）试做单词，且忽略大小写，求其中最高频的单词。</p>

<h5>分析</h5>

<p>使用map&lt;string, int>做存储，统计出现次数即可。</p>

<p>有些细节需要注意：</p>

<ul>
<li>使用<code>getline(cin, str)</code>获取正行数据</li>
<li>使用<code>transform(str.begin(), str.end(), str.begin(), ::tolower);</code>将字符串转换成小写</li>
<li>遍历字符串获取单词时，注意特殊条件。比如以非字符数字开头的字符串，以字符数字结尾的字符串等。</li>
</ul>


<p>pat1071源码:<a href="https://github.com/biaobiaoqi/CPractice/blob/master/PAT/advancedlevel/APAT1071.cpp">请戳</a></p>

<h2><a href="http://pat.zju.edu.cn/contests/pat-a-practise/1072">1072. Gas Station (30)</a></h2>

<h5>题意</h5>

<p>给出一个图，其中有 N &lt;= 10<sup>3</sup> 个节点是居民房，M &lt;= 10 个节点是计划建造加油站的候选点。给出加油站所能服务的最远距离 D。要求计算出合适的位置建造加油站，满足如下优先级条件：</p>

<ol>
<li>所有居民房必须在加油站的服务距离内。</li>
<li>所有居民房中距离加油站的最近的居民房与加油站之间的距离是最远的。（大概是安全方面的考虑，加油站要离居民区远一点）</li>
<li>所有房间距离加油站的最小距离的总和最小。（节约居民加油的总体成本）</li>
<li>同等条件下，序号越小的加油站优先。</li>
</ol>


<h5>分析</h5>

<p>实际上是求加油站到所有点的最短路径的问题，使用Dijsktra可以满足。</p>

<p>另外，需要考虑求最短路径的过程中是否要将其他加油站所构建的路径算入在内。从背景上看，加油站应该在公路边修建，故加油站之间以及居民房和加油站之间都是存在路径的，从给出的数据来看，存在两个加油站之间的路径。所以，计算最短路径时，是需要将所有加油站的节点也计算在内的。</p>

<p>pat1072源码:<a href="https://github.com/biaobiaoqi/CPractice/blob/master/PAT/advancedlevel/APAT1072.cpp">请戳</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用Ruby实现的论坛灌水工具：CC98 Post Machine]]></title>
    <link href="http://biaobiaoqi.me/blog/2013/11/05/cc98-post-machine/"/>
    <updated>2013-11-05T15:20:00+08:00</updated>
    <id>http://biaobiaoqi.me/blog/2013/11/05/cc98-post-machine</id>
    <content type="html"><![CDATA[<h2>介绍</h2>

<p>ZJU的校网论坛CC98比较活跃。论坛只对校内网开放，而且账号跟学生绑定，每个学生注册的账号数量有限。『十大』是CC98的经典页面：基于关注的人数（回帖的用户数而不是回帖的数量）用算法求出24小时内最火爆的十个发帖。很多同学都会浏览十大，关注论坛动态。</p>

<p>故事就是从十大引出的。有的社团在宣传活动时，为了扩大宣传面，会发动成员的小马甲顶贴上十大。这种违背社区自然发展轨迹的手段，强奸了关注十大贴的用户的意愿，阻碍了信息的自由流动。</p>

<p>于是萌生了完成一个批量发帖的机器，以其人之道还治其人之身的想法。在下次十大被宣传贴攻占时，能有反击的工具。</p>

<p>工具的用途很简单：使用不同的用户身份模拟真人论坛回帖，增加帖子关注度，以抵抗宣传贴。流程如下：提前收集各路亲朋好友的用户信息作为『预备水军』，『灌水』时，在评论内容文件中输入自定义的评论内容，在命令行参数中制定目标贴，即可实现随机顺序的用户自动顶贴。鉴于现在的功能是顶贴竞争十大，而十大排名是根据关注人数也就是独立用户评论数量做排序的，这里设计的顶贴策略是一个马甲发一条评论。以后可以考虑增加灵活的配置方案，实现更多功能。</p>

<p>项目Github地址：<a href="https://github.com/biaobiaoqi/CC98PostMachine/">https://github.com/biaobiaoqi/CC98PostMachine/</a></p>

<p>介于这个工具本身的罪恶的攻击属性，在此强调，工程仅供学习交流和对抗宣传贴。</p>

<!--more-->


<h2>使用说明</h2>

<h3>1.准备顶贴用户</h3>

<p>发帖的HTTP请求为POST请求。系统验证信息中需要有发帖用户的username，userid和hash后的password，这些都能从cookie中获得。</p>

<p>有两种方式设置水军的信息：</p>

<h4>(1)浏览器中获取cookie</h4>

<p>在浏览器中，找到cookie的内容。将对应的三项信息抽取出来后，填入<code>water_army.yml</code>文件，由于该文件涉及用户隐私信息，项目中设置了.gitignore，不会上传到repo中。可以参照<code>water_army.yml.example</code>的格式自行修改。</p>

<h4>(2)使用<code>RegWaterArmy</code>工具导入</h4>

<p>如果不想手动的查找cookie信息，也可以将账号、密码输入到<code>pre_water_army.txt</code>文件中，执行命令来获取相关信息。</p>

<p>在<code>pre_water_army.txt</code>文件中，一行为单位输入用户名和密码，中间用空格隔开。同样由于隐私原因，repo中没有上传该文件，可以自行将<code>pre_water_army.txt.example</code>改为<code>pre_water_army.txt</code>，然后填入内容。</p>

<p>填入账号、密码后，在src目录下运行如下命令：
<code>
$CC98POSTMACHINE/src/ruby RegWaterArmy.rb
</code>
即可自动获取用户的cookie信息，并导入<code>water_army.yml</code>文件中。注意，安全起见，完成这一步后，尽量删除账号、密码等隐私信息。</p>

<h3>2.准备评论</h3>

<p>在<code>comments.txt</code>文件中，设置用户评论的内容，每行一条。现在的设计是保证回帖的顺序与文件中的内容顺序一致。如果用户数量超过了文件中的评论条数，则回复时循环使用<code>comments.txt</code>中的评论。建议自行设计评论，且评论数大于等于水军数量。同样需要用户自行修改<code>comments.txt.example</code>为<code>commnets.txt</code>后使用。</p>

<h3>3.执行</h3>

<p>来到CC98PostMachine的src目录，执行：</p>

<p><code>
$CC98POSTMACHINE/src/ruby  PostMachine.rb  POST_URL [SPEED]
</code></p>

<p>其中<code>POST_URL</code>为响应帖子的网址，<code>SPEED</code>是设定的两个回帖之间的间隔时间，实际回帖时间做了如下的模糊：<code>SPEED + random(SPEED)</code>。</p>

<p>```</p>

<p>Usage: $CC98POSTMACHINE/src/ruby  PostMachine.rb  POST_URL [SPEED].</p>

<pre><code>POST_URL is the url address of target post.

SPEED is the time gap unit between two posts, it may be 1(s), 10(s) or any other number
</code></pre>

<p>```</p>

<h2>下一步：</h2>

<ul>
<li><p>修复bug：第一次执行命令时，都只有一个用户能成功回复。（是服务器端的对cookie的记录？）</p></li>
<li><p>整理代码结构，解耦，增加配置灵活性，写的更ruby一点</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在Eclipse里查看Java字节码]]></title>
    <link href="http://biaobiaoqi.me/blog/2013/10/25/java-bytecode-plugin-for-eclipse/"/>
    <updated>2013-10-25T04:06:00+08:00</updated>
    <id>http://biaobiaoqi.me/blog/2013/10/25/java-bytecode-plugin-for-eclipse</id>
    <content type="html"><![CDATA[<p>要理解Java字节码，比较推荐的方法是自己尝试编写源码对照字节码学习。其中阅读Java字节码的工具必不可少。虽然<code>javap</code>可以以可读的形式展示出.class文件中字节码，但每次改动源码都需调用命令行并不方便。这里介绍一个可以辅助阅读Java字节码的Eclipse插件：<a href="http://andrei.gmxhome.de/bytecode/">bytecode outline</a>。</p>

<p>bytecode outline插件用可读的方式展现了Eclipse的Java编辑器或类文件的字节码内容。它使用了<a href="http://asm.ow2.org/">ASM框 架</a>的部分组建来实现对字节码的展示（ASM框架在另外一篇操纵Java字节码的博文中有提到过：<a href="http://biaobiaoqi.me/blog/2013/09/08/custom-premain-method/">《AOP实践：java.lang.instrument的使用》</a>，是一个轻量级的Java字节码的操纵框架。）。</p>

<!--more-->


<h2>插件安装</h2>

<p>直接使用Update manager安装插件，非常简单：</p>

<p><code>Help -&gt; Install new Software... -&gt; Work with:</code></p>

<p>输入url：http://andrei.gmxhome.de/eclipse/</p>

<p>然后在弹框中选择合适的版本即可。</p>

<h2>使用</h2>

<p>在Eclipse中添加相应的查看窗口：</p>

<p><code>Window -&gt; Show View -&gt; Other -&gt; Java -&gt; Bytecode</code></p>

<p>选中某Java源文件，效果如图：</p>

<p><img src="http://biaobiaoqi.u.qiniudn.com/javabytecode1.png" alt="img" /></p>

<p>同时，还可以使用同样的方法，添加Bytecode Reference窗口，用于查询各个Java字节码的文档，示例如下：</p>

<p><img src="http://biaobiaoqi.u.qiniudn.com/javabytecode2.png" alt="img" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[反编译Jar包]]></title>
    <link href="http://biaobiaoqi.me/blog/2013/10/21/decompiliation-jar/"/>
    <updated>2013-10-21T12:16:00+08:00</updated>
    <id>http://biaobiaoqi.me/blog/2013/10/21/decompiliation-jar</id>
    <content type="html"><![CDATA[<p>Jar包(Java Archive)是对Java程序的打包，它可能包含源码，也可能没有。</p>

<p>对于有包含源码的Jar包，在Eclipse工程里设定好source code路径后能直接查看到远吗，对于理解代码、调试的帮助很大。而如果Jar包没有打包源码，实际上也可以通过反编译的方法得到源码。道理很简单，Java规范中，生成的.class文件所包含的信息完全能逆向的重构出源码。</p>

<p>当然，一些代码为了防止自身Jar包被人反编译，会做<a href="http://zh.wikipedia.org/wiki/%E4%BB%A3%E7%A0%81%E6%B7%B7%E6%B7%86">代码混淆</a>掩人耳目。其中最简单的一种方法就是是通过修改类名、变量名、方法名等方法让反编译的源码难于阅读理解。不过这个方法在混淆的时候需要特别注意：不能混淆对外提供接口的类。如果混淆了提供给外部的API接口的名字，整个工程就无法被正常使用了。</p>

<p>本文要举例的是对<a href="http://help.aliyun.com/origin?helpId=664">阿里云开放云存储Java SDK</a>的反编译。由于SDK需要暴露接口给其他开发人员调用，本身确实没有做混淆（不理解阿里云为何没有将它开源出来），故可以做简单的反编译来查看源码。</p>

<!--more-->


<h2>Jadclipse的安装使用</h2>

<p>Jadclipse插件的反编译功能源于Java反编译工具Jad。但用裸的Jad来命令行执行不太友好，于是就有了Jadclipse。</p>

<h3>1.下载Jad反编译工具</h3>

<p>下载好Jad工具，解压后放在合适的路径下。
<a href="http://varaneckas.com/jad/">Jad下载链接</a></p>

<h3>2.安装插件</h3>

<p>按照Eclipse版本下载匹配的Jadclipse插件：<a href="http://sourceforge.net/projects/jadclipse/files/?source=navbar">下载链接</a>。（这个插件的最近修改是2007年，只要不是使用的老掉牙的Eclipse，都可以下载最新的插件版本jadclipse3.3）。</p>

<p>解压后，将对应版本的.jar包放入Eclipse的插件目录(eclipse/plugins)下。</p>

<h3>3.配置Jadclipse</h3>

<p>插件中有两个一定要配置好的选项：</p>

<ul>
<li>Jad执行文件的路径</li>
<li>.class文件打开时的关联工具</li>
</ul>


<p>以下配置路径的方式可能Windows跟Mac版本的Eclipse各不相同，不过都比较简单，可以自行Google。</p>

<h4>3.1 Jad执行文件路径</h4>

<p>在Eclipse中，依次打开 <code>Preference -&gt; Java -&gt; JadClipse</code>，修改<code>Path to decompiler</code>的值，定位到Jad的执行文件路径。</p>

<h4>3.2 .class关联工具</h4>

<p>由于Eclipse默认.class文件打开使用的是Class File Viewer，如果.class没有关联的源文件，则无法查看源代码。需要将<code>.class without source</code>类型的文件的关联编辑器首选设置为JadClipse Class File Viewer。</p>

<p>打开方式如下： <code>Windows—&gt; Perference—&gt;General-&gt;Editors-&gt;File Associations</code></p>

<h3>4.测试</h3>

<p>配置好后，可能需要重启Eclipse（或许是插件本身不够Robust，博主在没有重启的情况下尝试打开没有附带源代码的.class文件时失败了，重启后一切ok）。</p>

<p>下载阿里云开放云存储SDK：<a href="http://help.aliyun.com/origin?helpId=664">下载链接</a>，解压后，将相应的Jar包加入到工程中。</p>

<p>点击其中的某个.class文件，即可显示出它的源代码。文件的头部会有Jad的相关信息：</p>

<p>```java
/<em>jadclipse</em>/// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) radix(10) lradix(10)
// Source File Name:   HmacSHA1Signature.java</p>

<p>…</p>

<p>```</p>

<h3>PS</h3>

<p>后来Google相关内容时，找到了JadClipse在Eclipse Market的版本：<a href="http://marketplace.eclipse.org/content/jadclipse-eclipse-4x">请戳</a>，或许对大家有用=)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[数据集成工具：Teiid实践]]></title>
    <link href="http://biaobiaoqi.me/blog/2013/10/19/data-integration-tool-teiid/"/>
    <updated>2013-10-19T23:58:00+08:00</updated>
    <id>http://biaobiaoqi.me/blog/2013/10/19/data-integration-tool-teiid</id>
    <content type="html"><![CDATA[<p>数据集成是把不同来源、格式、特点性质的数据在逻辑上或物理上有机地集中，从而为企业提供全面的数据共享。数据集成的方式多种多样，这里介绍的<a href="http://www.jboss.org/teiid/">Teiid</a>是其中的一种：通过抽象和联邦技术，实现分布式数据源的实时数据访问和集成，无需从记录系统中复制或移动数据。</p>

<p><a href="http://blogs.ejb.cc/archives/3552/teiid-scalable-information-integration-program">链接</a>是一篇关于Teiid的中文介绍，比较详细。</p>

<p>由于适配不同数据源和生成虚拟数据库（VDB）需要维护好几个配置文件，直接手动部署Teiid比较难受。好在Teiid提供了辅助工具<a href="http://www.jboss.org/teiiddesigner">Teiid Designer</a>，这是一个Eclipse插件，能帮助用户可视化的管理数据的集成过程。</p>

<ul>
<li><p>安装配置</p>

<p>  参见官网的Downloads界面的详细介绍（注意：环境配置中，各组件需严格遵循官网指定版本，实践经验表明，Teiid本身并不够鲁棒，容不得小差错）。</p></li>
</ul>


<p>接下来，我们用一个简单的应用场景实践Teiid的数据集成功能。</p>

<!--more-->


<h2>应用场景</h2>

<p>书店主营图书销售，并维护者一个用户对图书评价的数据库。技术上说，书店拥有三个数据模块：</p>

<ul>
<li><p>MySQL数据库，存储用户信息和用户对某书的评价</p>

<p>  表结构如下：</p></li>
</ul>


<p>```
create database library;
use library;
create table users (</p>

<pre><code> id int primary key,
 name char(20) not null,
 passwd char(20)) not null,
</code></pre>

<p>);
create table comments(</p>

<pre><code> cid int primary key,
 uid int ,
 bookid int not null,
 content char(255),
 foreign key (uid) references users(id)
</code></pre>

<p>);
```
* EXCEL表格，店主用于记录销售量、记录销售单价</p>

<p><code>
book_id,price,sales
1,89.00,1000
2,52.00,9999
3,30.00,10000
4,9800,5555
5,69.00,1234
</code></p>

<ul>
<li>XML文件记录书籍信息，包括</li>
</ul>


<p>``` xml
&lt;?xml version= "1.0" encoding ="UTF-8"?>
<BooksInfo></p>

<pre><code>    &lt;Book id = "1" &gt;
           &lt;Title&gt; Hadoop: The Definitive Guide &lt;/Title&gt;
           &lt;Author&gt; Tom White&lt;/Author &gt;
           &lt;publisher&gt; O'Reilly&lt;/ publisher&gt;
    &lt;/Book&gt;
    &lt;Book id = "2" &gt;
           &lt;Title&gt; Effective Java&lt;/Title &gt;
           &lt;Autorh&gt; Joshua Bloch&lt;/Autorh&gt;
           &lt;publisher&gt; HZ Books&lt;/ publisher&gt;
    &lt;/Book&gt;
    &lt;Book id = "3" &gt;
           &lt;Title&gt; C Programming Language&lt;/Title &gt;
           &lt;Autorh&gt; Kernighan, Ritchie &lt;/Autorh&gt;
           &lt;publisher&gt; HZ Books&lt;/ publisher&gt;
    &lt;/Book&gt;
    &lt;Book id = "4" &gt;
           &lt;Title&gt; Head First: Design Pattern&lt;/Title &gt;
           &lt;Autorh&gt; Freeman&lt;/ Autorh&gt;
           &lt;publisher&gt; Turning Education&lt;/publisher &gt;
    &lt;/Book&gt;
    &lt;Book id = "5" &gt;
           &lt;Title&gt; Refactoring: Improving the Design of Existing Code &lt;/Title&gt;
           &lt;Autorh&gt; Martin Fowler &lt;/Autorh&gt;
           &lt;publisher&gt; O'Reilly&lt;/ publisher&gt;
    &lt;/Book&gt;
</code></pre>

<p></BooksInfo>
```</p>

<h2>实践</h2>

<h3>1.创建工程</h3>

<p>打开配置好Teiid Designer插件的Eclipse，在Teiid Designer视图的Guides中，找到Define Teiid Model Project选项，如下图：</p>

<p><img src="http://biaobiaoqi.u.qiniudn.com/teiid1.png" alt="img" /></p>

<p>一路点击next，在如下界面勾选sources和views即可，designer guid会帮助生成这两个目录，其他目录在此项目中不需要。</p>

<p><img src="http://biaobiaoqi.u.qiniudn.com/teiid2.png" alt="img" /></p>

<h3>2.导入MyQL数据源</h3>

<p>在Guides界面，选择JDBC数据源</p>

<p><img src="http://biaobiaoqi.u.qiniudn.com/teiid3.png" alt="img" /></p>

<p>第一个步骤Define Teiid Model Project在上一步中已经完成了，现在需要创建一个JDBC链接，选择Create JDBC connection，在弹出的窗口中，选择Mysql数据库，然后点下一步</p>

<p><img src="http://biaobiaoqi.u.qiniudn.com/teiid4.png" alt="img" /></p>

<p>选择mysql驱动，配置好Mysql数据源的的url、用户名、密码，点下一步。（在这里，mysql的端口为默认的3306，library为之前配置好的mysql数据库）。点击test connection测试与mysql的链接能否建立。</p>

<p><img src="http://biaobiaoqi.u.qiniudn.com/teiid5.png" alt="img" /></p>

<p>接下来需要给数据源创建源模型（source model）了。同样在Guides试图上双击Create source model for JDBC data source，一路下一步，直到选择数据库和表，选择library数据库中的所有表，如下图：</p>

<p><img src="http://biaobiaoqi.u.qiniudn.com/teiid6.png" alt="img" /></p>

<p>创建源模型的最后一步如下图，可以自定义Model Name，为了让之后的sql查询过程更可读，我将以数据源类型命名它（mysql.xmi）。其他无关配置暂时不用理会。</p>

<p><img src="http://biaobiaoqi.u.qiniudn.com/teiid7.png" alt="img" /></p>

<p>finish后，就生成了一个元模型，如下图。图中可视化的显示了数据库所建的两张表</p>

<p><img src="http://biaobiaoqi.u.qiniudn.com/teiid8.png" alt="img" /></p>

<p>接下来可以测试数据是否可读，双击Guides中的Preview Data，在弹框中选择需要preview的表或者precedure（procedure在本工程里这里不会被用到）查询结果显示在了eclipse下方的SQL Result框中，如下图：</p>

<p><img src="http://biaobiaoqi.u.qiniudn.com/teiid9.png" alt="img" /></p>

<p>接下先来不用着急Define VDB，我们先把所有数据源配置完成后再一起来定义虚拟数据库。</p>

<h3>3.导入FlatFile数据源（CSV）</h3>

<p>跟之前一个步骤一样，只需要沿着Guides里的路线一步一步操作。</p>

<p><img src="http://biaobiaoqi.u.qiniudn.com/teiid10.png" alt="img" /></p>

<p>首先创建连接，配置好后test connection确保链接无误</p>

<p><img src="http://biaobiaoqi.u.qiniudn.com/teiid12.png" alt="img" /></p>

<p>链接建立后，需要创建元模型。如下图，提示有错，只需要选定Source Model Definition的文件的存储位置即可。存放在项目的sources目录中</p>

<p><img src="http://biaobiaoqi.u.qiniudn.com/teiid13.png" alt="img" /></p>

<p>按照默认配置，不断下一步，在 Flat File Demilited Columns Parser Settings 这一步，可以注意到下方有生成一串SQL语句。这些语句告诉Teiid需要如何将csv文件中的数据映射为关系型数据。</p>

<p><img src="http://biaobiaoqi.u.qiniudn.com/teiid14.png" alt="img" /></p>

<p>继续下一步，view model definition界面，提示创建的tableview名字包含不合法字符。原来由于将flat file命名为sales.csv,它自动生成了price.csvView作为table name，但名字中是不能出现<code>.</code>的，于是修改为salesview，finish。</p>

<p><img src="http://biaobiaoqi.u.qiniudn.com/teiid15.png" alt="img" /></p>

<p>之后测试数据能否读取。在选择所要preview的数据时，需要选择相应的table，而不是模型（这里需要选择salesView，而不是上层的price_view.xmi）。如下图：</p>

<p><img src="http://biaobiaoqi.u.qiniudn.com/teiid16.png" alt="img" /></p>

<h3>4.导入xml数据</h3>

<p>大部分步骤跟之前的步骤类似，在设定源模型时，需要注意配置好xml数据到关系型数据的映射关系，如下图：</p>

<p><img src="http://biaobiaoqi.u.qiniudn.com/teiid17.png" alt="img" /></p>

<p>XML File Contents中会根据xml文件中的数据解析出整体的层次结构。我们需要将其中的Book里的信息，添加到右边的Column Info中。虽然有很多Book数据列表显示在左边一栏里，但实际上只需要添加一次相关信息到右边的列信息中。值得注意的是，这里自动生成的Root Path是错误的，需要修改为BooksInfo/Book。其他没有什么特别的，一路下一步。</p>

<p>现在整个项目如下图：</p>

<p><img src="http://biaobiaoqi.u.qiniudn.com/teiid18.png" alt="img" /></p>

<h3>5.生成虚拟数据库</h3>

<p>点击Guides中的Define VDB，将三个数据源的模型加入到VDB中:MySQL的源模型，XML和CSV的视图模型（注意：不可以加入另外两个源模型的xmi文件，博主如此操作后遇到了一些莫名其妙的问题）。</p>

<p>如此就完成了在Teiid Designer中的多数据源集成的配置了。</p>

<h3>6.部署和使用</h3>

<p>通过Teiid Designer，我们能方便的部署VDB到Jboss服务器。</p>

<p>在Guides界面下，有execute vdb选项，双击即可。正式运行之前，需要运行Jboss server，如果没有启动服务器，Teiid Designer会弹框提醒的。</p>

<p>最后，尝试一下通过Teiid集成查询多个数据源。将sql语句输入到执行框中，刷蓝->右键->执行选中的语句。</p>

<p>```</p>

<blockquote><p>select * from "csv"."sales" as A join "xml"."booksinfo" as B on A.book_id = B.id</p></blockquote>

<p>```</p>

<p>结果如图：</p>

<p><img src="http://biaobiaoqi.u.qiniudn.com/teiid19.png" alt="img" /></p>
]]></content>
  </entry>
  
</feed>
