<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: 技术 | Biaobiaoqi的博客]]></title>
  <link href="http://biaobiaoqi.me/tags/ji-zhu/atom.xml" rel="self"/>
  <link href="http://biaobiaoqi.me/"/>
  <updated>2016-04-12T23:33:13+08:00</updated>
  <id>http://biaobiaoqi.me/</id>
  <author>
    <name><![CDATA[Biaobiaoqi]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[数据集成工具Teiid Designer的环境搭建]]></title>
    <link href="http://biaobiaoqi.me/blog/2014/03/08/teiid-designer/"/>
    <updated>2014-03-08T01:07:00+08:00</updated>
    <id>http://biaobiaoqi.me/blog/2014/03/08/teiid-designer</id>
    <content type="html"><![CDATA[<p>由于实验室项目要求的关系，看了些数据汇聚工具Teiid的相关知识。这里总结下Teiid的可视化配置工具Teiid Designer的部署过程。</p>

<h2>背景知识</h2>

<p>数据集成是把不同来源、格式、特点性质的数据在逻辑上或物理上有机地集中，从而为企业提供全面的数据共享。数据集成的方式多种多样，这里介绍的<a href="http://www.jboss.org/teiid/">Teiid</a>是其中的一种：通过抽象和联邦技术，实现分布式数据源的实时数据访问和集成，无需从记录系统中复制或移动数据。</p>

<p><a href="http://blogs.ejb.cc/archives/3552/teiid-scalable-information-integration-program">《Teiid 基于数据联邦的集成方案》</a>是一篇关于Teiid的中文介绍，比较详细。</p>

<p>由于适配不同数据源和生成虚拟数据库（VDB）需要维护好几个配置文件，直接手动部署Teiid比较难受。好在Teiid提供了辅助工具<a href="http://www.jboss.org/teiiddesigner">Teiid Designer</a>，这是一个Eclipse插件，能帮助用户可视化的管理数据的集成过程。</p>

<p>接下来记录了Teiid 和 Teiid Designer的环境配置步骤，如有纰漏，多谢指出=)。</p>

<h2>环境准备</h2>

<ul>
<li>操作系统：OS X 10.9.1</li>
<li>语言版本：Java6</li>
<li>下载IDE： <a href="https://www.eclipse.org/downloads/packages/eclipse-standard-431/keplersr1">Eclipse Kepler</a></li>
<li>下载<a href="http://www.jboss.org/jbossas/downloads.html">Jboss EAP6.1 Alpha</a></li>
<li>下载<a href="http://sourceforge.net/projects/teiid/files/teiid/8.4/Final/teiid-8.4.0.Final-jboss-dist.zip/download">Teiid Runtime 8.4</a></li>
<li><a href="http://www.jboss.org/teiiddesigner.html">Teiid Designer</a>：作为Eclipse插件，将使用Eclipse的install new software功能在线安装。</li>
</ul>


<!--more-->


<h2>Jboss配置</h2>

<p>配置环境变量 JBOSS_HOME，指向Jboss的根路径。在我的shell配置文件~/.zshrc中增加如下行：</p>

<p><code>JBOSS_HOME=~/Development/jboss #jboss的根路径</code></p>

<p>执行$JBOSS_HOME/bin/add-user.sh，给Jboss添加账号，执行过程如下：
```
What type of user do you wish to add?
 a) Management User (mgmt-users.properties)
 b) Application User (application-users.properties)
(a): b</p>

<p>Enter the details of the new user to add.
Realm (ApplicationRealm) :
Username : biaobiaoqi
Password :
Re-enter Password :
What roles do you want this user to belong to? (Please enter a comma separated list, or leave blank for none)[  ]:
About to add user 'biaobiaoqi' for realm 'ApplicationRealm'
Is this correct yes/no? yes
Added user 'biaobiaoqi' to file '/Users/shenyapeng/Development/jboss/standalone/configuration/application-users.properties'
Added user 'biaobiaoqi' to file '/Users/shenyapeng/Development/jboss/domain/configuration/application-users.properties'
Added user 'biaobiaoqi' with roles  to file '/Users/shenyapeng/Development/jboss/standalone/configuration/application-roles.properties'
Added user 'biaobiaoqi' with roles  to file '/Users/shenyapeng/Development/jboss/domain/configuration/application-roles.properties'
Is this new user going to be used for one AS process to connect to another AS process?
e.g. for a slave host controller connecting to the master or for a Remoting connection for server to server EJB calls.
yes/no? no</p>

<p>```</p>

<h2>Teiid配置</h2>

<p>解压下载好的Teiid Runtime 8.4 文件，注意到其目录格式跟JBoss很相似。直接将这些文件覆盖到Jboss的根目录下。</p>

<h2>Teiid Designer配置</h2>

<ul>
<li>1.打开Eclipse，选择Help > Install New Software</li>
<li>2.在弹出的界面中选择 Add，名称输入Enter JBossASTools（其他的名称也无所谓啦），地址栏输入如下地址，并点击确认。</li>
</ul>


<p><code>http://download.jboss.org/jbosstools/updates/release/kepler/integration-stack/</code></p>

<ul>
<li>3.接下来展开Data Virtualization，选择4个Teiid Designer的功能。</li>
<li>4.然后点击下一步，直到安装完毕，重启Eclipse就可以看到Teiid Designer的界面啦。</li>
</ul>


<h2>创建Teiid server</h2>

<p>Teiid 依托于Jboss服务器，在Teiid Designer中可以方便的创建Teiid服务器，如下图
<img src="http://biaobiaoqi.u.qiniudn.com/0CD17B0C-7A6C-425B-A12C-0FDA82FDE8F5.png?imageView/2/w/800/h/800" alt="img" /></p>

<p>创Teiid Server期间需要的配置有：</p>

<ul>
<li>Jboss的版本号（不要选错，这里使用Jboss EAP6.1，而不是Jboss AS 6.x）</li>
<li>Jboss的根路径；</li>
<li>启动的配置文件是：standalone-teiid.xml（而不是standalone.xml，参见<a href="https://community.jboss.org/message/790461">社区提问</a>）</li>
<li>在Jboss服务器的配置页面配置Management Login Credentials，使用之前注册的账号和密码。如下图
<img src="http://biaobiaoqi.u.qiniudn.com/A6E53DAD-703B-4D9A-AAFA-39C2AC19A02F.png?imageView/2/w/800/h/800" alt="img" /></li>
</ul>


<p>配置完成后，即可启动服务器。</p>

<p>现在，可以在Teiid Server的页面（双击创建的server）测试管理账号的连接和JDBC访问方式的连接是否通畅，如下图：（Test Administration Connection &amp; Test JDBC Connection）</p>

<p><img src="http://biaobiaoqi.u.qiniudn.com/B13BC18B-AF6C-44DB-96C9-B18D70EDA1AA.png?imageView/2/w/800/h/800" alt="img" /></p>

<p>JDBC的用户名和密码默认是user:user, 在<code>$JBOSS_HOME/standalone/configuration/teiid-security-users.properties</code>中配置。</p>

<p>接下来，就可以配置数据源，享受Teiid的数据虚拟化了 =)。可以参见另一篇博文：<a href="http://biaobiaoqi.me/blog/2013/10/19/data-integration-tool-teiid/">《数据集成工具：Teiid实践》</a></p>

<h2>雷区</h2>

<ul>
<li>如果是使用Windows安装配置，需要使用32位的JVM运行Eclipse。</li>
<li>整个体系耦合比较多，而且暂时多版本兼容不够，下载的各个组件版本号一定要对应。</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[数据集成工具Teiid Designer的环境搭建]]></title>
    <link href="http://biaobiaoqi.me/blog/2014/03/08/teiid-designer/"/>
    <updated>2014-03-08T01:07:00+08:00</updated>
    <id>http://biaobiaoqi.me/blog/2014/03/08/teiid-designer</id>
    <content type="html"><![CDATA[<p>由于实验室项目要求的关系，看了些数据汇聚工具Teiid的相关知识。这里总结下Teiid的可视化配置工具Teiid Designer的部署过程。</p>

<h2>背景知识</h2>

<p>数据集成是把不同来源、格式、特点性质的数据在逻辑上或物理上有机地集中，从而为企业提供全面的数据共享。数据集成的方式多种多样，这里介绍的<a href="http://www.jboss.org/teiid/">Teiid</a>是其中的一种：通过抽象和联邦技术，实现分布式数据源的实时数据访问和集成，无需从记录系统中复制或移动数据。</p>

<p><a href="http://blogs.ejb.cc/archives/3552/teiid-scalable-information-integration-program">《Teiid 基于数据联邦的集成方案》</a>是一篇关于Teiid的中文介绍，比较详细。</p>

<p>由于适配不同数据源和生成虚拟数据库（VDB）需要维护好几个配置文件，直接手动部署Teiid比较难受。好在Teiid提供了辅助工具<a href="http://www.jboss.org/teiiddesigner">Teiid Designer</a>，这是一个Eclipse插件，能帮助用户可视化的管理数据的集成过程。</p>

<p>接下来记录了Teiid 和 Teiid Designer的环境配置步骤，如有纰漏，多谢指出=)。</p>

<h2>环境准备</h2>

<ul>
<li>操作系统：OS X 10.9.1</li>
<li>语言版本：Java6</li>
<li>下载IDE： <a href="https://www.eclipse.org/downloads/packages/eclipse-standard-431/keplersr1">Eclipse Kepler</a></li>
<li>下载<a href="http://www.jboss.org/jbossas/downloads.html">Jboss EAP6.1 Alpha</a></li>
<li>下载<a href="http://sourceforge.net/projects/teiid/files/teiid/8.4/Final/teiid-8.4.0.Final-jboss-dist.zip/download">Teiid Runtime 8.4</a></li>
<li><a href="http://www.jboss.org/teiiddesigner.html">Teiid Designer</a>：作为Eclipse插件，将使用Eclipse的install new software功能在线安装。</li>
</ul>


<!--more-->


<h2>Jboss配置</h2>

<p>配置环境变量 JBOSS_HOME，指向Jboss的根路径。在我的shell配置文件~/.zshrc中增加如下行：</p>

<p><code>JBOSS_HOME=~/Development/jboss #jboss的根路径</code></p>

<p>执行$JBOSS_HOME/bin/add-user.sh，给Jboss添加账号，执行过程如下：
```
What type of user do you wish to add?
 a) Management User (mgmt-users.properties)
 b) Application User (application-users.properties)
(a): b</p>

<p>Enter the details of the new user to add.
Realm (ApplicationRealm) :
Username : biaobiaoqi
Password :
Re-enter Password :
What roles do you want this user to belong to? (Please enter a comma separated list, or leave blank for none)[  ]:
About to add user 'biaobiaoqi' for realm 'ApplicationRealm'
Is this correct yes/no? yes
Added user 'biaobiaoqi' to file '/Users/shenyapeng/Development/jboss/standalone/configuration/application-users.properties'
Added user 'biaobiaoqi' to file '/Users/shenyapeng/Development/jboss/domain/configuration/application-users.properties'
Added user 'biaobiaoqi' with roles  to file '/Users/shenyapeng/Development/jboss/standalone/configuration/application-roles.properties'
Added user 'biaobiaoqi' with roles  to file '/Users/shenyapeng/Development/jboss/domain/configuration/application-roles.properties'
Is this new user going to be used for one AS process to connect to another AS process?
e.g. for a slave host controller connecting to the master or for a Remoting connection for server to server EJB calls.
yes/no? no</p>

<p>```</p>

<h2>Teiid配置</h2>

<p>解压下载好的Teiid Runtime 8.4 文件，注意到其目录格式跟JBoss很相似。直接将这些文件覆盖到Jboss的根目录下。</p>

<h2>Teiid Designer配置</h2>

<ul>
<li>1.打开Eclipse，选择Help > Install New Software</li>
<li>2.在弹出的界面中选择 Add，名称输入Enter JBossASTools（其他的名称也无所谓啦），地址栏输入如下地址，并点击确认。</li>
</ul>


<p><code>http://download.jboss.org/jbosstools/updates/release/kepler/integration-stack/</code></p>

<ul>
<li>3.接下来展开Data Virtualization，选择4个Teiid Designer的功能。</li>
<li>4.然后点击下一步，直到安装完毕，重启Eclipse就可以看到Teiid Designer的界面啦。</li>
</ul>


<h2>创建Teiid server</h2>

<p>Teiid 依托于Jboss服务器，在Teiid Designer中可以方便的创建Teiid服务器，如下图
<img src="http://biaobiaoqi.u.qiniudn.com/0CD17B0C-7A6C-425B-A12C-0FDA82FDE8F5.png?imageView/2/w/800/h/800" alt="img" /></p>

<p>创Teiid Server期间需要的配置有：</p>

<ul>
<li>Jboss的版本号（不要选错，这里使用Jboss EAP6.1，而不是Jboss AS 6.x）</li>
<li>Jboss的根路径；</li>
<li>启动的配置文件是：standalone-teiid.xml（而不是standalone.xml，参见<a href="https://community.jboss.org/message/790461">社区提问</a>）</li>
<li>在Jboss服务器的配置页面配置Management Login Credentials，使用之前注册的账号和密码。如下图
<img src="http://biaobiaoqi.u.qiniudn.com/A6E53DAD-703B-4D9A-AAFA-39C2AC19A02F.png?imageView/2/w/800/h/800" alt="img" /></li>
</ul>


<p>配置完成后，即可启动服务器。</p>

<p>现在，可以在Teiid Server的页面（双击创建的server）测试管理账号的连接和JDBC访问方式的连接是否通畅，如下图：（Test Administration Connection &amp; Test JDBC Connection）</p>

<p><img src="http://biaobiaoqi.u.qiniudn.com/B13BC18B-AF6C-44DB-96C9-B18D70EDA1AA.png?imageView/2/w/800/h/800" alt="img" /></p>

<p>JDBC的用户名和密码默认是user:user, 在<code>$JBOSS_HOME/standalone/configuration/teiid-security-users.properties</code>中配置。</p>

<p>接下来，就可以配置数据源，享受Teiid的数据虚拟化了 =)。可以参见另一篇博文：<a href="http://biaobiaoqi.me/blog/2013/10/19/data-integration-tool-teiid/">《数据集成工具：Teiid实践》</a></p>

<h2>雷区</h2>

<ul>
<li>如果是使用Windows安装配置，需要使用32位的JVM运行Eclipse。</li>
<li>整个体系耦合比较多，而且暂时多版本兼容不够，下载的各个组件版本号一定要对应。</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linode跨节点迁移：从Tokyo到Fremont]]></title>
    <link href="http://biaobiaoqi.me/blog/2014/01/26/migrate-linode-vps-from-tokyo-to-fremont/"/>
    <updated>2014-01-26T01:45:00+08:00</updated>
    <id>http://biaobiaoqi.me/blog/2014/01/26/migrate-linode-vps-from-tokyo-to-fremont</id>
    <content type="html"><![CDATA[<h2>背景</h2>

<p><a href="http://biaobiaoqi.me/blog/2014/01/22/email-3/">上一篇博客</a>交代了如何在Linode上搭建邮件服务器，并配置好各种协议、记录来投入实际使用。</p>

<p>由于实践过程中，曾经尝试使用明文协议与服务器交流数据，可能泄露了账号、密码信息，造成之后被攻击发送垃圾邮件(详细情况类似于如下链接：<a href="http://linuxroad.blog.51cto.com/765922/1039676">链接1</a>,<a href="http://linuxroad.blog.51cto.com/765922/1039675">链接2</a>)，IP被上了黑名单，在<a href="http://www.mail-tester.com">mail-tester.com</a>上的测试评分为0分，同时还收到了Linode的警告。</p>

<p>为了能继续使用邮箱服务，我只好想着法子给Linode换一个IP。但原则上Linode是不支持换IP的。幸运的是，它支持VPS的迁移，而且方便快捷。从Tokyo节点迁移到Fremont节点后IP一般会发生变动（对于网络延迟，权衡了下<a href="http://www.v2ex.com/t/62721">大家</a>的说法,Fremont还不错:<a href="https://www.linode.com/speedtest/">官方测速</a>），这样就可以间接的更换IP了。</p>

<p>迁移过程很简单，这里做一下记录。</p>

<!--more-->


<h2>迁移准备</h2>

<h3>发出迁移请求</h3>

<p>Linode有比较完善的<a href="https://manager.linode.com/support">Support</a>。对于迁移这种情况，可以在Support页面发出如下请求：</p>

<p>```
Hi,</p>

<p>I've met with some problems with my server. And I think it's a solution to migrate my server from Tokyo to Fremont.</p>

<p>Could you please do me a favor?</p>

<p>Thanks a lot!
```
1分钟之后，我就收到了技术支持的回复：</p>

<p>```
Hello,</p>

<p>Your migration to our Fremont datacenter has been configured. Please log into the Linode Manager, shut down, and click the migrate button to move to your new server. Your disk images will be moved with you. The migration should take approximately 10-15 minutes per gigabyte of data to complete. Please note that any existing backups for this Linode will be purged and will not be recoverable after you initiate the migration.</p>

<p>Your new IP address is: xxx.xxx.xxx.xxx</p>

<p>We ask that you begin this migration within 24 hours and let us know when it is complete. Thanks in advance!</p>

<p>Regards,
Jack Stitt</p>

<p>```</p>

<p>此时，Linode控制面板中已经多了一个迁移的提醒：<code>You have a migration pending!</code>。</p>

<p>不过先不要着急迁移，因为迁移过程是不可恢复的，我们需要首先将VPS中得重要数据备份到本地。注意如回复中所说，这种备份不同于Linode中的备份服务。</p>

<h3>备份数据</h3>

<p>找到一份科学的全盘备份数据方式：<a href="http://www.linode.im/1590.html">linode用户通过ssh+dd命令复制整个磁盘</a>。不可否认dd做传输比scp一个个拷贝文件快得多，但由于需要将整个盘5G数据全部通过网络传输，而家里网速慢，传输数据只有大概100KB/s的速度，需要等待太长时间。</p>

<p>实际上，我所需要备份的文件无非是<code>/home</code>目录下得所有数据和部分服务的配置数据（比如postfix、dovecot、nginx等），总共大概也就100MB，于是决定选择性的用scp传输备份数据：</p>

<p><code>scp root@vps-ip:/backup /home/backup #vps-ip替换为服务器IP地址</code></p>

<p>同时由于零散的传输文件效率不高，可以考虑先将服务器端所有小文件使用tar命令压缩到一个包里：</p>

<p><code>tar zcvf backup.gz /home /etc/nginx/sites-enable</code></p>

<p>在本地的解压缩命令如下：</p>

<p><code>tar zxvf backup.gz</code></p>

<p>当然，实际上我们都不会希望备份数据需要被使用到啦，而迁移vps丢失数据的概率应该也是很小的。</p>

<h3>修改DNS记录</h3>

<p>由于迁移过程需要大概一个多小时，网站服务的不可访问是无法避免了。只好尽可能将迁移过程放在深夜没有用户访问需求的时候。</p>

<p>从这个角度讲，DNS的修改也没有特别的及时性要求。在前已完成前修改好DNS服务器中的A记录、MX记录等配置即可。</p>

<h2>迁移</h2>

<p>在正式迁移之前，需要关闭服务器。</p>

<p>然后点击Linode控制面板中的migration按钮。接下来，就是一个多小时的等待。</p>

<h2>后续</h2>

<p>完成迁移之后，开启VPS，还需要注意修改服务中IP相关的配置。比如shadowsocks里的json.config中的server ip。</p>

<p>一切顺利完成后，别忘了去Support界面回复Ticket =).</p>

<p>如果你考虑租用Linode机器，而又不吝啬使用<a href="https://www.linode.com/?r=06fc7f86359e92800c41177a80c5678ecfcb2568">我的推荐码</a>，本博客不胜感激=).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[邮件服务（三）：实践服务器搭建]]></title>
    <link href="http://biaobiaoqi.me/blog/2014/01/22/email-3/"/>
    <updated>2014-01-22T01:14:00+08:00</updated>
    <id>http://biaobiaoqi.me/blog/2014/01/22/email-3</id>
    <content type="html"><![CDATA[<h2>背景</h2>

<p><a href="http://biaobiaoqi.me/tags/you-jian-fu-wu/">邮件服务系列博文</a>中，前两篇介绍了邮件系统的基本功能和安全体系，本文记录了搭建邮箱服务器的实践。</p>

<p><a href="http://en.wikipedia.org/wiki/Sendmail">Sendmail</a>是一种多用途、支援多种协定的跨网络电子邮件传送代理软件，于1983年随着BSD 4.1c首次发行，2001年时的调查，互联网上的邮件服务器有42%使用Sendmail，但之后由于多次被发现重大的安全性漏洞，且其设定档过于复杂造成较高的学习门槛等因素，导致市占率下滑。</p>

<p><a href="http://www.postfix.org/">Postfix</a>被<a href="http://www.porcupine.org/wietse/">Wietse Zweitze Venema</a>创造出来以取代Sendmail。本次实践即使用Postfix为域名biaobiaoqi.me搭建邮箱服务器，服务器是Linode上的VPS，Ubuntu 12.04LTS，DNS服务器使用<a href="http://dnspod.com/">DNSPod</a>。</p>

<!--more-->


<h2>检查IP信用度</h2>

<p>在自建邮件服务器之前，先检查所要使用的IP的信用度。如果IP已经在垃圾邮件联盟的黑名单里面，意味着这个IP在此之前或许被用作发送垃圾邮件，不愿意给这个IP擦屁股的话，就换个IP好了。</p>

<p>可以点下面的链接查看：</p>

<ul>
<li><a href="http://anti-spam.org.cn/">http://anti-spam.org.cn/</a></li>
<li><a href="http://www.justspam.org/check-an-ip">http://www.justspam.org/check-an-ip</a></li>
<li><a href="http://www.spamhaus.org/query/bl?ip=74.125.129.27">http://www.spamhaus.org/query/bl?ip=74.125.129.27</a> #需要将连接末尾的IP替换为邮箱服务器的IP</li>
</ul>


<h2>域名、IP相关配置</h2>

<h3>FQDN配置</h3>

<p>选定的邮箱服务器需要有合适的全名。比如可以设定biaobiaoqi.me的邮箱服务器的FQDN为mail.biaobiaoqi.me。修改FQDN的命令如下：</p>

<p><code>hostname mail.biaobiaoqi.me</code></p>

<p>查看FQDN的命令为：</p>

<p><code>hostname -f</code></p>

<p>FQDN需要记住，之后配置DNS记录时需要。</p>

<h3>MX记录和A记录</h3>

<p>配置MX记录指向邮箱服务器IP。</p>

<p><code>biaobiaoqi.me.     600 IN  MX  10 biaobiaoqi.me.</code></p>

<p>使用如下命令查询：</p>

<p><code>dig mx biaobiaoqi.me</code></p>

<p>在DNS服务器里增加针对邮箱服务器的FQDN的A记录。</p>

<p><code>mail.biaobiaoqi.me.    10  IN  A   106.186.114.43</code></p>

<p>使用如下命令查询：</p>

<p><code>dig a mail.biaobiaoqi.me</code></p>

<h3>PTR配置</h3>

<p>Linode的域名反向解析设置教程参见：<a href="https://library.linode.com/dns-manager#sph_setting-reverse-dns">Setting Reverse DNS</a></p>

<p>查看PTR的命令如下：</p>

<p><code>dig -x 106.186.114.43</code></p>

<p>得到的结果中有如下项则为正确：</p>

<p><code>
;; ANSWER SECTION:
43.114.186.106.in-addr.arpa. 8640 IN    PTR mail.biaobiaoqi.me.
</code></p>

<h3>SPF配置</h3>

<p>在DNSPod上设置SPF记录。由于DNS本身不支持SPF类型，可以使用TXT记录代替：</p>

<p><code>biaobiaoqi.me.     600 IN  TXT "v=spf1 a mx -all"</code></p>

<p>可以通过如下命令查询：</p>

<p><code>dig txt biaobiaoqi.me</code></p>

<p>在线测试SPF是否部署成功：<a href="http://www.openspf.org/Why?show-form=1">http://www.openspf.org/Why?show-form=1</a></p>

<h2>Postfix搭建</h2>

<p>使用Postfix做SMTP服务器，Dovecot来做IMAP/POP3服务器，并使用Mysql存储加盐密码作认证。具体教程如下：</p>

<p><a href="https://library.linode.com/email/postfix/postfix2.9.6-dovecot2.0.19-mysql"><strong>Email with Postfix, Dovecot, and MySQL</strong></a></p>

<p>启动postfix：</p>

<p><code>sudo service postfix start</code></p>

<p>启动dovecot：</p>

<p><code>sudo dovecot -c /etc/dovecot/dovecot.conf</code></p>

<p>邮件服务启动后，测试相应的端口是否正常开放：</p>

<p>```
netstat -nltp | grep dovecot #查看POP3 （993）和IMAP （995）的端口是否运行</p>

<p>netstat -nltp | grep 25 #查看SMTP（25）的端口是否运行
```</p>

<p>对于没有使用TLS或者STARTTLS的邮件服务器，可以使用<a href="http://exchange.mvps.org/smtp_frames.htm">telnet</a>测试SMTP是否部署成功。而本次实践中增加了用户认证，telnet这种明文传输的协议无法作为测试工具，只好直接使用邮件客户端做功能测试。</p>

<h2>DKIM配置安装</h2>

<p>具体部署过程参照：<a href="https://rtcamp.com/tutorials/mail/dkim-postfix-ubuntu/">dkim-postfix-ubuntu</a></p>

<p>其中需要注意，如果使用的Postfix版本不低于2.6，需要将/etc/postfix/main.cf中的milter_protocol赋值为6。
<code>postconf mail_version</code>可以查看postfix的版本。</p>

<p>本地测试公钥密钥是否正确：（<a href="http://www.opendkim.org/opendkim-testkey.8.html">opendkim-testkey命令的介绍</a>）</p>

<p><code>
-&gt;#opendkim-testkey -d biaobiaoqi.me -s mail -k /etc/postfix/dkim.key -vvv
opendkim-testkey: key loaded from /etc/postfix/dkim.key
opendkim-testkey: checking key 'mail._domainkey.biaobiaoqi.me'
opendkim-testkey: key not secure #这里大概是用户、权限的问题。不会影响基本功能
opendkim-testkey: key OK
</code></p>

<h2>邮箱服务器健康度测试</h2>

<p>完成上述所有步骤后，一个完整的域名邮箱就可以投入使用了。在此之前，可以做一次全面的体检。</p>

<p>推荐使用在线监测服务：<a href="http://www.mail-tester.com/">mail-tester</a>。这是一个全面、界面友好的邮件测试网站。按照要求发送邮件到某邮件地址，然后就可以查到邮件服务器的体检报告了。每项都会有详细的说明。</p>

<h2>遇到的问题记录</h2>

<p>安装部署的过程中，遇到不少问题。简略记录下其中有代表性的一些：</p>

<ul>
<li><p>能成功发送邮件，但无法接受邮件，在日志中查看，全是status=deferred。解决：FQDN的设定错误。</p></li>
<li><p>使用<code>sudo service opendkim start</code>无法启动OpenDKIM。解决：不要使用service命令，而是用如下命令启动：<code>/etc/init.d/opendkim start</code></p></li>
<li><p>在使用Maildir格式接收邮件时，无法接受邮件。解决：需要自己在用户目录下构建Maildir/tmp、Maildir/cur、Maildir/new目录。</p></li>
<li><p>在使用Maildir格式接收邮件时，无法接受邮件。解决：本地Maildir的权限会造成Permission denied。</p></li>
<li><p>给qq邮箱发送邮件，提示『此地址未验证，请注意识别』。解决：这是qq的bug：<a href="http://edm.marketing100.com/service/news_detail.php?ID=126">参见解释</a></p></li>
</ul>


<h2>管理队列中的邮件</h2>

<p>在服务器端管理队列中得邮件使用<code>postqueue</code>和<code>postsuper</code>命令。使用详情参见：</p>

<ul>
<li><a href="http://www.faqforge.com/linux/server/manage-the-postfix-mailqueue-with-postsuper-postqueue-und-mailq/">Manage the postfix mailqueue with postsuper, postqueue und mailq</a></li>
<li><a href="http://www.postfix.org/postqueue.1.html">postqueue</a></li>
<li><a href="http://www.postfix.org/postsuper.1.html">postsuper</a></li>
</ul>


<h2>其他参考资料</h2>

<ul>
<li><a href="https://rtcamp.com/tutorials/mail/">Emails Tutorials</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[邮件服务（二）：安全、认证和垃圾邮件]]></title>
    <link href="http://biaobiaoqi.me/blog/2014/01/21/email-2/"/>
    <updated>2014-01-21T01:38:00+08:00</updated>
    <id>http://biaobiaoqi.me/blog/2014/01/21/email-2</id>
    <content type="html"><![CDATA[<h2>背景</h2>

<p><a href="http://biaobiaoqi.me/tags/you-jian-fu-wu/">邮件服务系列博文</a>中<a href="http://biaobiaoqi.me/blog/2014/01/20/email-1/">第一篇博客</a>介绍了邮件服务的基本知识，了解了邮件是如何从发件人的邮件客户端经过不同的传输协议传送到收件人的邮件客户端的。这只是邮件的基本功能实现，但如果发生如下情况，整个邮件系统的生态环境将被扰乱：</p>

<ul>
<li>被不法分子利用邮箱服务器发送垃圾邮件</li>
<li>被其他人伪造域名邮箱发送邮件</li>
<li>被中间人窃取账号密码、甚至重要邮件信息（中间人攻击）</li>
<li>即使自己拥有邮箱服务器的权限，无限制的滥用这个权利给其他邮箱发送邮件也是不好的</li>
</ul>


<p>为了防止以上的种种情况，电子邮箱体系引入了更多的协议和机制。本文对此做浅显的总结，如有出错，还请指出和补充。</p>

<!--more-->


<h2>PTR</h2>

<p><a href="http://en.wikipedia.org/wiki/List_of_DNS_record_types#PTR">PTR</a>(pointer record)是DNS记录中的一种。与A记录相反，它记录的是由IP到<a href="http://en.wikipedia.org/wiki/Fully_qualified_domain_name">FQDN</a>（fully qualified domain name）的映射。</p>

<p>PTR并非由DNS服务提供商控制，而是通过IP提供商来设定。比如博主使用linode的VPS，独立IP 由Linode提供，于是PTR也是由Linode给予的权限来做设定。</p>

<p>在DNS中设置PTR能增加邮件的非垃圾邮件权重（不同垃圾邮件黑名单判定机构有不同的判定规则，其中PTR是公认的指标之一）。</p>

<p>更多信息参考：<a href="https://rtcamp.com/tutorials/mail/fqdn-reverse-dns-ptr-mx-record-checks/">Checking FQDN, Reverse-DNS/PTR, MX record</a></p>

<h2>SPF</h2>

<p><a href="http://en.wikipedia.org/wiki/Sender_Policy_Framework">SPF</a>(Sender Policy Framework)也是一种DNS记录。通过查询发送邮件者的 IP 地址和发送来的邮件地址做对比，进行简单的邮件验证。域名的管理员通过 SPF 记录或 TXT 记录来规定这个域名下哪些 IP 地址是“允许”发送邮件的，这样如果有人用别的 IP 地址来伪造发送的话，收件方可以根据 SPF 来选择拒收这些邮件。</p>

<p>最初的邮件系统没有考虑到各种安全因素，SPF是在之后的发展过程中提出的。为了兼容不支持SPF记录的DNS服务器（本博客所使用的DNSPod就不支持SPF记录。），允许用TXT记录来表达SPF。<a href="www.openspf.org">OpenSPF</a> 建议在这段过渡时期同时添加 SPF 记录和 TXT 记录。</p>

<p>SPF记录的语法规则见<a href="http://www.openspf.org/SPF_Record_Syntax">链接</a>。这里给出一个简单的例子：</p>

<p><code>v=spf1 a mx -all</code></p>

<p>其中<code>spf1</code>是版本号；<code>a</code>代表把A记录对应的IP加入信任列表；<code>mx</code>说明把这个域名上的 MX 记录所对应的服务器加入信任列表；<code>-all</code>代表将不是从信任列表发出的邮件强制拒绝(hard fail)。</p>

<p>值得注意的是，经过测试发现Gmail并没有对hard fail的邮件执行拒绝，只是在web界面做出了一些提醒。这里有一篇相关的讨论：<a href="http://www.gossamer-threads.com/lists/spf/discuss/32914">链接</a>。</p>

<p>更多资料参考：<a href="http://t.tt/31/">如何给域名设置 SPF 记录</a></p>

<h2>DKIM</h2>

<p><a href="http://www.dkim.org/">DKIM</a>(DomainKeys Identified Mail)是一种电子邮件的验证技术，使用<a href="http://zh.wikipedia.org/wiki/%E5%85%AC%E5%BC%80%E5%AF%86%E9%92%A5%E5%8A%A0%E5%AF%86">非对称加密</a>为邮件提供了签名与验证的功能。一般来说，发送方会在电子邮件的标头插入DKIM-Signature及电子签名，它们由私钥加密。而接收方则透过DNS查询得到公开密钥后进行验证。</p>

<p>DKIM是由DomainKeys所改进的协定，大多数的运作方式与DomainKeys相同。在2007年2月时，DKIM被列入互联网工程工作小组（IETF）的标准提案，并于同年5月成为正式标准。</p>

<h2>传输协议</h2>

<p>通过标准的TCP/IP做SMTP传输，没有任何安全保障，信息容易被截获。为了保证数据的安全，可以使用SSL/TLS提供加密链接。对于IMAP和POP3使用SSL加密尚可接受，而SMTP会遇到兼容性问题：POP3和IMAP至于MRA和MUA有关，而使用SMTP协议的MTA会与其他的MTA沟通，除非全世界所有MTA节点同时升级为SSL/TLS加密的通信协议，否则会出现部分邮件无法中继的状况。</p>

<p><a href="http://en.wikipedia.org/wiki/STARTTLS">STARTTLS</a>很好的解决了这一问题。STARTTLS是明文传输协议的扩展，它允许在明文连接的基础上将连接升级为加密连接，而不是使用另外一个加密接口。</p>

<p>一般的，邮箱服务器各协议端口设定如下：</p>

<ul>
<li>IMAP：明文端口143，加密端口993</li>
<li>POP3：明文端口110，加密端口995</li>
<li>SMTP：明文端口 25，SSL加密端口465，STARTTLS加密端口587</li>
</ul>


<p>关于SSL、TLS和STARTTLS的区别，参见<a href="https://www.fastmail.fm/help/technology_ssl_vs_tls_starttls.html">链接</a>。</p>

<h2>查看邮件原始信息</h2>

<p>随着邮件在网络中的中转，邮件头会被加入许多必要信息。理解邮件头能帮助理解邮件服务的整个系统，在遇到垃圾邮件时，也可以助于定位问题所在。</p>

<p>GMAIL的Web端可以查看邮件的详细信息。在邮件内容框里，点击右上角的更多选项，选中Show original，如图：</p>

<p><img src="http://biaobiaoqi.u.qiniudn.com/emailori-mail.png?imageView/2/w/800/h/800" alt="img" /></p>

<p>下面展示linode发送给someuser@gmail.com的一封邮件的原始信息：</p>

<p>```                                                                                                                                                                                                                                                     <br/>
Delivered-To: someuser@gmail.com
Received: by 10.114.246.38 with SMTP id xt6csp139967ldc;</p>

<pre><code>    Mon, 20 Jan 2014 06:53:17 -0800 (PST)
</code></pre>

<p>X-Received: by 10.182.81.197 with SMTP id c5mr7069251oby.40.1390229596297;</p>

<pre><code>    Mon, 20 Jan 2014 06:53:16 -0800 (PST)
</code></pre>

<p>Return-Path: <a href="&#109;&#97;&#x69;&#108;&#x74;&#111;&#x3a;&#115;&#117;&#112;&#112;&#x6f;&#114;&#x74;&#64;&#x6c;&#105;&#x6e;&#x6f;&#100;&#101;&#x2e;&#x63;&#x6f;&#109;">&#x73;&#117;&#x70;&#x70;&#x6f;&#114;&#x74;&#x40;&#108;&#x69;&#110;&#111;&#100;&#x65;&#46;&#x63;&#x6f;&#109;</a>
Received: from mail2.linode.com (mail2.linode.com. [173.255.198.11])</p>

<pre><code>    by mx.google.com with ESMTP id f6si835374obr.111.2014.01.20.06.53.15
    for &lt;someuser@gmail.com&gt;;
    Mon, 20 Jan 2014 06:53:16 -0800 (PST)
</code></pre>

<p>Received-SPF: pass (google.com: domain of support@linode.com designates 173.255.198.11 as permitted sender) client-ip=173.255.198.11;
Authentication-Results: mx.google.com;</p>

<pre><code>   spf=pass (google.com: domain of support@linode.com designates 173.255.198.11 as permitted sender) smtp.mail=support@linode.com
</code></pre>

<p>Received: from li114-242.members.linode.com (li114-242.members.linode.com [69.164.199.242])</p>

<pre><code>by mail2.linode.com (Postfix) with ESMTP id 6AF9E26A96;
Mon, 20 Jan 2014 09:53:15 -0500 (EST)
</code></pre>

<p>Date: Mon, 20 Jan 2014 09:53:15 -0500 (EST)
From: support@linode.com
To: someuser@gmail.com
Message-ID: <a href="&#x6d;&#97;&#105;&#108;&#x74;&#x6f;&#x3a;&#x33;&#x37;&#54;&#x37;&#53;&#48;&#56;&#x36;&#56;&#x2e;&#50;&#54;&#55;&#x36;&#52;&#x2e;&#49;&#51;&#x39;&#x30;&#x32;&#50;&#57;&#x35;&#x39;&#x35;&#x34;&#x33;&#55;&#46;&#x4a;&#x61;&#118;&#x61;&#77;&#97;&#105;&#108;&#x2e;&#99;&#x66;&#x75;&#115;&#x69;&#x6f;&#x6e;&#64;&#x6d;&#x61;&#105;&#108;&#50;&#46;&#108;&#x69;&#110;&#x6f;&#100;&#x65;&#x2e;&#x63;&#111;&#x6d;">&#x33;&#55;&#x36;&#x37;&#53;&#48;&#x38;&#54;&#x38;&#46;&#50;&#x36;&#x37;&#x36;&#x34;&#46;&#x31;&#x33;&#57;&#x30;&#50;&#x32;&#x39;&#53;&#57;&#x35;&#x34;&#51;&#55;&#46;&#x4a;&#x61;&#118;&#97;&#x4d;&#97;&#105;&#108;&#46;&#99;&#102;&#117;&#x73;&#105;&#111;&#110;&#64;&#x6d;&#97;&#x69;&#108;&#50;&#46;&#x6c;&#105;&#110;&#x6f;&#x64;&#101;&#x2e;&#x63;&#x6f;&#x6d;</a>
```
这封邮件里每项的具体含义如下(<a href="https://support.google.com/mail/answer/29436?hl=en">参考</a>以及<a href="http://www.ietf.org/rfc/rfc0822.txt">RFC0822</a>)：</p>

<ul>
<li>Delivered-TO： 发送的目的地邮箱地址。</li>
<li>Received： 这个字段可以用来追踪邮件的传送路径。字段的基本格式为 from A by B for C。其中A为发送方，B为接收方，C为收件人邮箱地址。由于邮件可能经过多个SMTP服务器中继，故可以有多个Received字段。在邮件头中，以自底向上的顺序阅读它们。对于这封邮件，传送路径为：li114-242.members.linode.com -> mail2.linode.com -> mx.google.com -> 10.182.81.197 -> 10.114.246.38.</li>
<li>Received-SPF： 用于记录SPF查询来验证邮件的安全性，参考<a href="http://www.openspf.org/SPF_Received_Header">SPF Received Header</a></li>
<li>Return-Path： 邮件的回复地址，来自于SMTP中得<code>mail from:</code>命令。</li>
<li>Date： 邮件的发送时间。</li>
<li>From： 客户端显示的发件人地址，可以跟Return-Path中得地址不同。</li>
<li>To： 客户端显示的收件人地址。</li>
</ul>


<p>实际上，Google估计到IP地址为敏感信息，某些情况下会隐藏发送邮件标头中得发件人IP地址（<a href="https://support.google.com/mail/answer/26903?hl=zh-Hans&amp;hlrm=en">资料链接</a>）。</p>

<p>不同的客户端对这一功能做了不同的实现。比如QQ邮箱以前是能够查看邮件原始信息的，而现在已经关闭了这一功能。</p>

<h2>第三方邮件服务</h2>

<p>邮件服务器的基本功能实现虽然看起来简单，但为了让系统拥有足够的稳定性、邮件送达率，还是得付出不小的努力来与复杂的网络环境做斗争。许多公司为了集中注意力于自己的核心业务，会剥离出邮件发送的业务，使用第三方的邮件服务。国内国外涌现了不少第三方的邮件服务解决方案。自己没有相应的使用经验，谨贴出两个不错的介绍，供大家参考：</p>

<ul>
<li><a href="http://70.io/develop/aws_ses-mailgun-sendcloud.html">邮件发送服务AWS SES，Mailgun以及SendCloud</a></li>
<li><a href="http://www.zhihu.com/question/20088568">知乎的邮件系统为什么不再用 Amazon SES 了？</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
