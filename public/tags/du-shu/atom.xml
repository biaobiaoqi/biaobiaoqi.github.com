<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: 读书 | Biaobiaoqi的博客]]></title>
  <link href="http://biaobiaoqi.github.io/tags/du-shu/atom.xml" rel="self"/>
  <link href="http://biaobiaoqi.github.io/"/>
  <updated>2016-04-19T08:49:46+08:00</updated>
  <id>http://biaobiaoqi.github.io/</id>
  <author>
    <name><![CDATA[Biaobiaoqi]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[我的2013]]></title>
    <link href="http://biaobiaoqi.github.io/blog/2014/01/04/happy-new-year/"/>
    <updated>2014-01-04T14:47:00+08:00</updated>
    <id>http://biaobiaoqi.github.io/blog/2014/01/04/happy-new-year</id>
    <content type="html"><![CDATA[<p>早上十一点，在周六的惬意中起床。窗外的杭州雾霾再次光临，想想几年前还是一种只会在清晨遇到的亲切的朦胧美，到如今已经沦为对环境和未来的担忧，原来已经2014。</p>

<p>在编程语言界，有个著名的<a href="http://en.wikipedia.org/wiki/Duck_test">鸭子测试</a>，用来明确部分动态语言的多态特性，可以用下面这句话来表达：</p>

<blockquote><p>If it looks like a duck, swims like a duck, and quacks like a duck, then it probably is a duck.</p></blockquote>

<p>实际上，这就是我现在认识的世界。以此开篇，用几个标签介绍2013的我。</p>

<!--more-->


<h3>读书</h3>

<p>2012年底入了一只Kindle Paper White，但实在无法忍受它的翻页速度。我习惯对感兴趣的内容来回翻阅，对我而言，KPW的阅读体验已经抑制了我对知识的摄取速度，在用它读完一本书后，就将它贱价出给了同学。前不久刚入手的iPad mini2 倒很是中意，特别是 <a href="http://duokan.com/">多看阅读</a>这个app，鉴证了一年里它迭代增加的新功能，比如英文查词、网页版同步，越来越能满足自己的需求。一周之内已经在上面完成了两本书的阅读。</p>

<p>一年里，一共看完了<a href="http://book.douban.com/people/biaobiaoqi/collect">31本书</a>。将值得推荐的粗略归类如下：</p>

<ul>
<li><p>思维、心理、认知类：</p>

<p>  《程序员的思维修炼 : 开发认知潜能的九堂课》、《番茄工作法图解 : 简单易行的时间管理方法》、《谁是谷歌想要的人才 : 破解世界最顶尖公司的面试密码》、《暗时间》、《拖拉一点也无妨 : 跟斯坦福萌教授学高效拖延术》</p></li>
<li><p>社会、商业、科技哲学</p>

<p>  《科技想要什么》、《免费》</p></li>
<li><p>信息产业</p>

<p>  《沸腾十五年 : 中国互联网1995-2009》、《Facebook效应 : 看Facebook如何打造无与伦比的社交帝国》、《打造Facebook : 亲历Facebook爆发的5年》、《黑客 : 计算机革命的英雄(二十五周年新版)》、《改变未来的九大算法》</p></li>
<li><p>编程技术</p>

<p>  《计算机网络 : 自顶向下方法与Internet特色》、《鸟哥的Linux私房菜.基础学习篇（第三版）》、《Sinatra : Up and Running》、《Jump Start Sinatra》、《深入理解Java虚拟机 : JVM高级特性与最佳实践》、《大规模Web服务开发技术》、《Effective Java 第二版 中文版/Sun公司核心技术丛书 : Effective Java Second Edition》、《人人都有好工作 : IT行业求职面试必读》</p></li>
<li><p>设计</p>

<p>  《写给大家看的设计书（第3版）》</p></li>
<li><p>自传等</p>

<p>  《随遇而安》、《痛并快乐着》、《看见》、《俞敏洪口述 : 在痛苦的世界中尽力而为》、《我所理解的生活 : 三十岁的韩寒，第一次自我剖析》、《人生元编程》（池大大的《人生元编程》没有纸质出版物）</p></li>
</ul>


<p>发现自己对认知、心理学以及科技哲学的社会科学方向比较感兴趣，未来会更系统化的做学习了解。信息产业和编程技术方向不出意外会一直关注。未来会多看一些经济学相关的读物。</p>

<p>读过的书我都会在<a href="http://book.douban.com/">豆瓣读书</a>做标记，也写了<a href="http://biaobiaoqi.github.io/tags/du-shu/">几篇书评</a>，大都是读书笔记和简单的感想。挺喜欢豆瓣这个平台的。</p>

<p>无论是物质建设还是文化建设都离不开知识和思想的传播和在群体里的增长，书是知识和思想的一种载体，需要给与他足够的尊敬和激励。在力所能及的范围里，我在逐渐培养自己花钱买书的习惯，连同电脑和手机上得应用。国内的在线书店里书真的已经很便宜了。在爱尔兰交流的时候，看到书店里书的标价的数字根国内差不多，不过是欧元。</p>

<h3>Evernote &amp; Dropbox</h3>

<p>从2012年底开始习惯使用Evernote来做笔记。现在想想，都不知道没有使用Evernote的日子是怎么过来的。根据所记载的内容做了简单分类，设定了多个笔记本。有时候不知道如何归类的就会记入以日期编号的笔记里。</p>

<p>信息爆炸的社会，合理的整合信息，有助益与信息向知识的转变。Evernote是这样一款产品，很看好它的开放平台，做好根其他产品的生态环境的对接，繁荣应该只是时间问题。</p>

<p>也是从2012年底开始习惯使用Dropbox来管理资源。从最基础的2G空间，到教育网邮箱认证过的30G+的空间，我将更多的重要资源放到了Dropbox里，甚至曾经把它当做博客的图床（后来换到了七牛云存储）。虽然受到某墙的干扰，其核心功能还是足够的。</p>

<h3>编程</h3>

<ul>
<li><p>Github &amp; stackoverflow</p>

<p>  知识管理用Evernote，而代码管理则非Github莫属了。这一年里开始比较多的使用github。通过教育网邮箱注册获得的5个私有仓库一直没使用，倒是开启了十来个公开代码仓库。开源是一股自由开放的力量，继续努力用自己的方式参与和贡献。</p>

<p>  两年前开始用stackoverflow，凭借早先在Java字节码和Objc方面的经验，在社区里混得了600+的积分，而最近一年反而对社区没有明显的贡献，更多的是从中获取解决问题的答案。来年希望增加对社区的投入。</p></li>
<li><p>Java &amp; JVM</p>

<p>  虽然一直用Java比较多，但实际上使用到多线程和框架类的方面少得可怜。做过一些学习的努力，不过还不够，未来需要加强。</p></li>
<li><p>HTTP &amp; Ruby &amp; Sinatra</p>

<p>  以前没什么Web开发经验，对HTTP也不够了解。当需求到来，想法涌出，却发现他们都需要Web来支持才能实现价值，于是开始重视对HTTP相关内容的实践和学习。</p>

<p>  最早听说Ruby是因为Rails在Web界的异军突起和Ruby对程序员的友好，决定学Ruby是因为它与Java这种强类型静态语言的大相径庭。</p>

<p>  我选择了相对简单的Sinatra框架来认识Ruby，看了源码，缺少实践经验。未来几个月正好拿自己的一个idea来练手。</p></li>
<li><p>大数据 &amp; 云计算</p>

<p>  伴随着这些词从几年前的时髦到现在的烂大街，我也经历了从最初充满兴趣的学习到后来在实验室项目任务的推动下的远离。看过几篇论文，搭过一些环境，做过一些分享，仅此而已。看Hadoop源码的计划由于优先级过低在任务堆栈中一直呈现饥饿状态。</p>

<p>  或许年轻人跟着概念走是很危险的一件事情。大公司耗得起不是因为这些概念就是未来，而是他们有钱有人有时间，跟投资一个意思，风险不小。确认自己内心想要的到底是什么，再为之努力，而不是随大流。</p></li>
<li><p>VPS</p>

<p>  与<a href="http://weibo.com/redow7">@RedDow</a>和<a href="http://weibo.com/cloudbye">@草原</a>合租了Linode的乞丐版。现阶段维护着自己的博客，还搭了Wiki、OpenVPN、ShadowSocks等服务，时不时还会放上一些小玩意儿，比如给女友做的个简单的网页<a href="http://love600.me/">love600.me</a>。实际上，最近正在构思一个产品，构思比较复杂，希望明年能把它完成，以填补两年以来内心的一个期待。</p></li>
</ul>


<h3>博客</h3>

<p>  两年前在CSDN开始维护自己的博客，中间断了一阵子。而后2013年4月底在Github上用Octopress搭建了新的个人博客，记录技术、工作和生活。8个月时间里，积累了超过2.7w的PV，超过1w的UV，就像我在<a href="http://biaobiaoqi.github.io/blog/2013/11/13/blog-migration/">《半年博客小结》</a>中写的，<a href="http://biaobiaoqi.github.io">http://biaobiaoqi.github.io</a> 是我阵地。最近一个月，状态并不算太好，只更新了一篇博客。新的一年开始，记博客的习惯还需要坚持。</p>

<h3>兴趣</h3>

<ul>
<li><p>耳机</p>

<p>  经过不一定靠谱的在线测试，证明我的听力年龄大约在40岁左右。过早的老化可能与我经常掏耳朵的习惯有关，第一次让我意识到老去的残酷。而在此之前，我还在耳朵上做出了两笔小投资：购入了一副AKG K420和一副Marshall Minor。不过小五百的耳机也无法改变我是木耳的事实。投资失败。
  好在Marshall Minor的挂耳式耳塞设计适合运动时佩戴，一个人跑步、投篮的时候是个不错的选择。更多的时候，从寝室到实验室的路上，《晓说》、《Teahour》、《Tiny4Voice》周杰伦、王力宏、萧敬腾和陈奕迅的歌陪我度过了一个人的时间。
  有时候我也会想，这些声音是不是夺去了内心独白的时间。</p></li>
<li><p>电影</p>

<p>  学校内网的NexusHD是一个pt神站，拥有大量的高清电影。自己也经常跟妹子，跟基友一起去电影院贡献票房。《看电影的门道（插图第2版）》是我在观影方面做出的努力，阅读后看电影的角度确实丰富了一些。</p></li>
<li><p>死飞</p>

<p>  花了两个月月钱买了辆入门的死飞，是因为向往它的自由、极简：没有刹车，飞轮固定，让机械结构出错的几率减小，可控制车速、倒车让操控感变强。在实验室和寝室之间来回了半年后，现在对它的感受是：骑死飞脚很累损膝盖；对车的掌控度很高确实很爽。另外学会了<a href="http://biaobiaoqi.github.io/blog/2013/10/20/repair-my-fixed-gear/">补胎、换胎</a>等技能。</p>

<p>  不过一直也没有花时间来研究如何玩出花式的动作。基本的Mid-Skid对我来说已经足够了。附上一句：注意安全。</p></li>
<li><p>运动：篮球、健身、游泳</p>

<p>  夏天实验室提供了游泳卡去校区的游泳场游泳，后来<a href="http://weibo.com/redow7">@ReDow7</a>提出没有八块肌游泳会被叫大叔，于是下半年在实验室购入了哑铃断断续续的开始了自助健身锻炼。篮球被落下了半年多，直到重温了一遍《灌篮高手》，下半年重新恢复到一周一次。虽然不喜欢“身体是革命的本钱”这种把革命当做终极目标的话，但咱们确实要善待生命的载体。</p></li>
<li><p>苹果</p>

<p>  妹子一直说我是苹果的脑残粉，其实我没那么宗教般的迷恋，只是喜欢。俗话说得好，“属性不够装备凑”，从nano、shuffle、classic到iPhone、MBP、iPad，都体验了一把。12年入了一台11年底产的13寸MBP，不过13年才用的顺心了些，自己DIY了<a href="http://biaobiaoqi.github.io/blog/2013/11/24/failed-in-replacing-hdd/">RAID0的双SSD硬盘</a>，速度快的飞起，应用软件也用的更成熟了（参见<a href="http://biaobiaoqi.github.io/blog/2013/11/24/install-software-in-os-x/">《我的OS X软件安装索引》</a>）。</p>

<p>  2013圣诞节，妹子给送了一台iPad mini 2。作为阅读和网页浏览工具，确实很完美。</p>

<p>  有时候也会觉得iOS过于封闭，无法DIY一些功能，没有￥600/年的苹果开发者账号甚至都无法将自己写的App部署到设备上。但暂时没有放弃使用苹果产品的想法，品牌价值、产品文化和应用的生态环境优势太大！（另附博文<a href="http://biaobiaoqi.github.io/blog/2013/06/09/something-about-mac-gui/">《Mac的GUI哲学》</a>）</p></li>
<li><p><del>摄影</del></p>

<p>  将捣鼓了几日的Canon 600D给了老爸，彻底断了自己摄影的念头。<a href="http://cocolighter.com/">约哥</a>就不一样了，与他同时买的相机，人家现在动辄出入高端摄影圈。到时候还得仰仗他给拍毕业照来纪念ZJU的7年时光呢。</p></li>
<li><p>2K13</p>

<p>  随着篮球在生活中的回归，2K13和2K14也在寝室里重燃战火。我经常拿步行者、开拓者等队与<a href="http://weibo.com/u/2072817314">@洪鑫komac</a>的热火队大战，虽说胜负乃兵家常事，不过几次7局赛都败了还是让人扼腕。明年会针对性的提升技战术能力。有空向实况足球延伸下也是极好的。</p></li>
</ul>


<h3>最后</h3>

<p>想不到拖拖拉拉还写了半天多流水账。</p>

<p>真诚的对2013道一声感激。这一年，遇到了不少事儿，碰上了不少人，都是我的财富。</p>

<p>最后的最后，非常幸运有一个理解我的温柔可爱的妹子一直陪伴着我，顶着“秀恩爱XXX”的压力说句，永远爱你 =)。</p>

<hr />

<p>有兴趣的同学可以运行如下Ruby语句：</p>

<p><code>irb&gt;&gt; "Happy new year to you!".sum</code></p>

<p>其实没什么啦=)，结果是 <code>2014</code>。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[《大规模Web服务开发技术》]]></title>
    <link href="http://biaobiaoqi.github.io/blog/2013/10/28/scalable-web-service-development/"/>
    <updated>2013-10-28T01:41:00+08:00</updated>
    <id>http://biaobiaoqi.github.io/blog/2013/10/28/scalable-web-service-development</id>
    <content type="html"><![CDATA[<h2>Web服务开发的心灵鸡汤</h2>

<p><img src="http://img3.douban.com/mpic/s6818566.jpg" alt="img" /></p>

<p>周末去上海陪妹子的两天在路途上看完了这本<a href="http://book.douban.com/subject/6758780/">《大规模Web服务开发技术》</a>。</p>

<p>《大规模Web服务开发技术》是日本的<a href="http://www.hatena.com/">Hetena</a>团队以夏天举办的实习活动的课程讲义为基础整理的开发、运营大规模服务的入门书。书中更多的偏重了Hetena技术团队发展过程中的实践经验总结，将一个系统从无到有的发展过程有条理的展现了出来。读完全书，觉得它更像是一本Web服务开发的心灵鸡汤，有许多靠谱的总结，但相对零散，刚接触的人很难掌握。当然，心灵鸡汤并不是贬义，只是有不同的针对性。</p>

<!--more-->


<h2>内容</h2>

<p>经验总结的东西一般很难有板有眼的映射到一个成熟的理论框架下。它的知识点相对零散，互相的耦合性比较强，很难在初步接触时建立起深刻的认识。尽管作者已经尽可能的让书的内容跟着服务端架构从小变大的过程走，具备一定的条理性，但要想通过看这种书来补强不谢知识区域，还是有些牵强。</p>

<p>值得称道的是，作者对Hetena的技术发展史的描绘，能让读者接触到一个真实系统的成长过程。这是比较难得的一次体验。或许某个时刻，我们能在网上看到一篇讲解分布式存储系统的文章，另一个时刻，我们又看到了一篇将数据库划分的文章，但我们不知道在什么场景需要使用它们。这些零散的知识点，都需要融入到一个整体的经验体系、理论体系中，来发挥它们的作用。实践经验能帮助知识点的梳理，达到这一点。</p>

<p>另外，全书的文笔很轻松，所以读起来比较快。时不时会跳出几句卖萌的表达。或许跟主体内容来自讲义有关吧=)。</p>

<h2>定位</h2>

<p>如此的定位，让本书不太适合想打造实际的技能栈的童鞋。换句话说，想通过这本书实际学习到某门技术是不太可行的。倒是挺适合对Web服务端不怎么熟悉，想走走看看了解下概貌，陶冶下情操的童鞋们，把这本书当做闲暇的读物，找找学习的感觉。我就是如此。另外，本身已经有足够的经验，或许也能读读这本书，梳理自己的思路。</p>

<p>这本书让我想起了<a href="http://biaobiaoqi.github.io/blog/2013/07/19/odps-in-alibaba/">阿里的暑期课堂</a>，不过说实话，阿里的那次开放课堂的内容更多的侧重于宣讲，缺少技术架构的内容。希望更多的国内的企业能开放技术培训，让学生们能更早的接触到实践层的东西，某种角度来看也是一种双赢。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[《黑客：计算机革命的英雄》]]></title>
    <link href="http://biaobiaoqi.github.io/blog/2013/10/21/hacker/"/>
    <updated>2013-10-21T22:19:00+08:00</updated>
    <id>http://biaobiaoqi.github.io/blog/2013/10/21/hacker</id>
    <content type="html"><![CDATA[<p><img src="http://img3.douban.com/mpic/s6951030.jpg" alt="img" /></p>

<p>《<a href="http://book.douban.com/subject/6860890/">黑客：计算机革命的英雄</a>》不是一本新书，创作于上世纪80年代。</p>

<p>这本书我断断续续花了几个月才看完。大量的传奇黑客人物穿插其中，说实话容量略大，到头来也没记住几个名字，不过这不是重点。全书将对整个计算机发展史有深刻影响的黑客文化分三个阶段的娓娓道来，让我重新审视对黑客的看法认识。下面是我对全书的笔记摘要。</p>

<!--more-->


<h2>第一代黑客：MIT黑客</h2>

<p>他们是最早的黑客，活跃在20世纪50-60年代。黑客主义刚刚在MIT出现的时候主要是专注于体验计算机的魅力；探索和扩展那些迷人的系统的精髓，并利用这些完美的逻辑系统来创造一种文化和一种生活方式。</p>

<p>MIT的技术模型火车俱乐部（TMRC）发明了很多英文单词。hack是其中一个，如果一个正在进行的项目或正在构建的产品不仅仅是为了实现某个建设性目标，而且只要参与进来，就会有莫大的乐趣，那么这个项目就叫一个Hack。</p>

<p>这些黑客们探索事物的本质，掌握它们。通过将东西拆开，了解它们的工作原理，并根据这种理解创造新奇的甚至更有趣的东西，可以学习到关于系统（关于世界）的重要知识。</p>

<p>那时候的计算机非常古老，古老到我只从文字里见到过，比如在纸带上写程序，比如一间房间大小的操作系统，预约时间才能上机，比如批处理系统等。</p>

<p>那时候计算机管理严格，想给系统增加汇编指令，得经过长时间的审批操作，MIT的黑客们为了节省时间，晚上偷偷的潜入机房改装计算机。当黑客们需要某些东西来帮助他们创造、探索或修理时，他才不管“知识产权”这种在他们看来荒谬的说辞呢。他们市场潜入办公室，拿到需要的工具，用完后再放回去。当然，他们是不以经济利益为目的的。</p>

<p>在黑客们看来，没有任何一个系统是完成了的，总能让它变得更好。他们不断的改进系统，在系统上开发具有挑战性的应用。黑客通过了解和建立各种几乎被所有其他人漠视的系统来改善整个世界的愿望非常强烈。</p>

<h2>第二代黑客：硬件黑客</h2>

<p>源于大名鼎鼎的家酿计算机俱乐部（<a href="http://en.wikipedia.org/wiki/Homebrew_Computer_Club">homebrew computer club</a>）。理念是：互助，分享，恪守黑客道德，反对狭隘的所有权和自私行为。</p>

<p>黑客们从与众不同和贴近群众的角度去看待计算机怎样改变人民的生活。他们对计算机的传播更感兴趣。将原先的庞然大物带入了寻常百姓家。探索精神和自己动手的行为成为这里主要的价值观。</p>

<p>苹果和微软都在这个时期诞生。也是在这个时期，黑客文化开始接受商业的冲突，集中体现在大家对软件版权问题的理解上。这与原有的朴素的共享原则发生了冲突。在原来的观点中，软件属于全人类，是不需要有版权保护的（即使到后来Stallman也不认同版权的存在）。</p>

<h2>第三代黑客：游戏黑客</h2>

<p>第三代黑客生活的时代，黑客到的已经大打折扣。一切都是金钱在作怪。黑客道德的一条要旨是电脑本身不会考虑信息产权，但在那个年代，信息产权已经越发的成熟和深入到各个层面。</p>

<p>20世纪80年代，黑客游戏是唯一具有商业价值的艺术形式。黑客必须自己做导演：独立构思、编剧、指挥、执行并美化、最终完成一部杰作。第三代黑客看重的是艺术性。他们中，很多人成为了新闻人物，他们是文华英雄，突破限制并探索电脑系统。</p>

<p>计算机游戏的发展充斥着商业气息，程序员的角色也在滚滚金钱利益关系中被削弱，比如最早游戏编写者所能获得的版权30%，后来越来越低。</p>

<p>实际上，越往后，商业和黑客主义的并存局面越明显。现在的黑客是在黑客主义和商业两种价值观并不对立的环境中成长起来的。他们正在影响着黑客运动的未来。</p>

<p>保罗格拉汉姆(<a href="http://paulgraham.com/">Paul Graham</a>)认为，黑客主义的价值观不会受到商业的威胁……他们一定能够战胜商业。依靠直觉解决问题，分散化作出决策，强调工作质量，这些都是黑客的理念，而且他们在工作中一直遵循这些理念。</p>

<p>黑客精神开始向企业家精神转变。</p>

<h2>黑客道德</h2>

<p>作者总结的七条『黑客道德准则』：</p>

<ol>
<li>Access to computers and anything which might teach you something about the way the world works should be unlimited and total.
(接触电脑和任何能教会你世界运转方式的通道都应该完全向任何人开放。)</li>
<li>Always yield to the Hands on Imperative!<br/>
(永远践行亲自动电脑操作的指令。)</li>
<li>All information should be free.
(所有信息都应该是免费的。)</li>
<li>Mistrust authority promote decentralization.
(不信任权威，致力于推动反中央集权式统治。)</li>
<li>Hackers should be judged by their hacking, not bogus criteria such as degrees, age, race or position.
(黑客只受其黑客技术水平评价，而不是受制于他们的学位、种族、年龄或社会地位影响。)</li>
<li>You can create art and beauty on a computer.
(计算机可以创造艺术和美感。)</li>
<li>Computers can change your life for the better.
(计算机能让人们的生活变得更美好。)</li>
</ol>


<p>其中，对第三条容易产生误读。实际上，这一条最早出现在黑客道德的未来会议上。布兰德说</p>

<blockquote><p>一方面，信息应该是昂贵的，因为它非常有价值。你在正确的地方得到正确的信息，就会改变你的人生。另一方面，信息应该是免费的，因为获得信息的成本不断地降低。这就是两者的矛盾所在。</p></blockquote>

<p>在黑客文化的发展过程中，黑客道德是原则性的一环。</p>

<p>最早，黑客们认为，对计算机的访问（以及任何可能帮助你认识我们这个世界的事物）应该是不受限制的、完全的。任何人都有动手尝试的权利。『信息应该是自由的』这种信念最直接的体现在优秀的计算机或计算机程序中。</p>

<p>而后随着计算机的发展，出现了分权的思想。这根政治的分权或许有千丝万缕的联系，但更多的是体现了黑客精神中对计算机民主平等的追求。而黑客的信息自由和分权思想甚至对Internet的前身ARPAnet有重大的影响。</p>

<p>到如今，商业化席卷全球。硅谷一些科技公司也在追寻黑客道德，比如风头正劲的Facebook一直以来所阐述的黑客之道（The Hacker Way）。在面临着新的时代，黑客道德也在不停的适应新的挑战。</p>

<p>计算机先驱费尔森斯坦说</p>

<blockquote><p>技术绝不仅仅是死气沉沉的硬件。它还是人们思想的展现。……人们仅仅是活着，而人性更加珍贵，也更加脆弱。所以我们必须要向那些墨守成规的文化挑战，用我们自身的创造力向它挑战。要并且用我们自己的创造力去取得突破……这才是实质</p></blockquote>

<p>这就是黑客道德的实质。</p>

<p>世界都将会从黑客道德中受益。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[《改变未来的九大算法》]]></title>
    <link href="http://biaobiaoqi.github.io/blog/2013/10/03/nine-algorithms-that-changed-the-future/"/>
    <updated>2013-10-03T13:19:00+08:00</updated>
    <id>http://biaobiaoqi.github.io/blog/2013/10/03/nine-algorithms-that-changed-the-future</id>
    <content type="html"><![CDATA[<h2>不要在意那些细节</h2>

<p>这是一本关于计算机世界的科普读物。豆瓣链接：<a href="http://book.douban.com/subject/24529132/">请戳</a>。</p>

<p>非常推荐刚接触计算机的朋友花上三五小时将全书通读一遍，没有技术细节，没有公式证明，它会告诉作者挑选出的九大算法出现的缘由和发展的过程。这些不关乎实现细节的思想概括，更能体现算法在整个领域中的存在的原因。它们不再是冷冰冰的算法过程，这是阅读大多数的书籍、教材所难以获得的。</p>

<p>至于我的推荐原因，如下全文。</p>

<!--more-->


<h3>课程学习之弊</h3>

<p>大二大三的那两年，在学校上过了网络、操作系统、数据库、算法设计等诸多计算机领域的基础必修课程。由于生性愚钝加之令人头大的砖头书的体系化、理论化，对于知识的掌握顶多处于知其然却不知其所以然的程度。在这种情况下，学习就退化为了填鸭式的记忆。比如我记得RSA的公钥加密流程，却无法理解为何要套用这么一大堆的数学方法来得到如此神奇的效果，比如，我知道数据库有一套日志机制，却不知道它是如何与其他的组件共同构建起一个系统的……没有来龙去脉，就没有对技术发展的感知，没有对技术本质的理解和认识。</p>

<p>经过了四年多的摸爬滚打，到现在对这些基础知识的认识自然远好于当年上课的理解水平，不是因为我在反复的学习课程内容，而是从实践中获得了新的认识。</p>

<h3>从生活出发</h3>

<p>大多数人的思维习惯，倾向于从已知的事物中衍生对新事物的认识，这是一种类推。而高校的大多数教材和教授方式较少考虑到这一点，一种简单粗暴的直入主题的方式被大量的使用，排斥了知识的前因后果，技术的来龙去脉，剩下的只是新体系本身。这增加了学习曲线的入门坡度。</p>

<blockquote><p>理论是灰色的，生活之树常青</p></blockquote>

<p>《改变未来的九大算法》是对歌德这句话的良好实践。</p>

<!--more-->


<p>比如在阐述公钥加密机制时，作者从生活中的寄信讲起，一步步类比到计算机的通信上，并用染料配色的方式举例了迪菲赫尔曼机制。生动形象的描述了算法的原理和来由。</p>

<h3>抛开细节实现</h3>

<p>过往的教材一旦陷入对某些实现细节的阐释，就失去了对全局上下文的把握。就像镜头对焦到了一个点上，造成了周边景物的模糊化效果。</p>

<p>《改变未来的九大算法》全书很少涉及到技术的实现细节，这正是它的优势所在。比如数据库的一致性章节，从一个银行转账的实例讲起，通过所面临的一系列问题的解决方案的描述，让人对数据库的整体实现有了全局的把握。在理解的前提下，更深入的学习也变得更有动力和方向。</p>

<p>奈何自己已经过了朦朦胧胧的那几年，在此将本书强烈推荐给初涉计算机领域的朋友们。当然，其他人粗读一遍，也是对自己知识体系的一次小梳理啦;)。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[《俞敏洪口述》]]></title>
    <link href="http://biaobiaoqi.github.io/blog/2013/07/07/yuminhong/"/>
    <updated>2013-07-07T23:53:00+08:00</updated>
    <id>http://biaobiaoqi.github.io/blog/2013/07/07/yuminhong</id>
    <content type="html"><![CDATA[<h2>质朴、诚恳和坚韧</h2>

<p>这本书是某次在Amazon上购书『满100送书一本』时挑的。放在抽屉里有段日子了。</p>

<p>一直挺崇拜俞敏洪老师。初次了解到他是高中的时候看的『赢在中国』，俞敏洪老师是嘉宾点评。而后混在考T的大流中去上了新东方的课程，几个老师讲得不错，比较可惜的是远离了老俞的时代。恰好前两天热映的『中国合伙人』，又把他拉回视野前沿。周日，趁着没心情码代码，忙里偷闲的读完了这本自传体的文字。</p>

<p>我不太喜欢读『活人』的传记。没有盖棺定论的事儿，或多或少掺杂些美华。但读这本书，却丝毫没有表现出浮夸，就像他的性格一般质朴、诚恳和坚韧。</p>

<p>或许在某些名人的传记里，永远不会看到他通过喝酒打通关系搞定了某个问题，而老俞有。书里多次的描述了他是怎样融入了这个『人情社会』。不可否认，他的本分和待人诚恳让他有人缘，这是他的优势。</p>

<p>他能在面对东方学校过河拆桥的举动下，沉住气，以和为贵，用合理的手段占据主动。</p>

<p>他能在北大读本科的阶段受众人嘲讽的环境下成长，不断学习，在毕业时，喊出『你们干十年成的我干二十年，你们二十年成的我干四十年。如果实在不行，我会保持心情愉快、身体健康，到八十岁以后把你们送走了我再走』。</p>

<p>凡此种种……</p>

<h2>世界观</h2>

<p>从每个成功的人的经历中，都能总结出数不清的箴言。成功的理由永远说不完。而这本书里，对我而言感触最深的无非是下面这些话：</p>

<blockquote><p>人生就是这样，你不受这个苦就会受那个苦。一个人如果从苦中能找到乐和幸福，那他就是幸运的。……我深刻的意识到什么也不做的痛苦比任何其他痛苦更加深刻，所以我一定要做事，做事的标准就是必须做对社会有好处的事情，以最大的努力在痛苦的世界中尽力而为。</p></blockquote>

<p>对我而言，这句话实在受用。我无法证明这些字在未来的时间里能对我造成的影响，却打在我最近几年来受困扰最多的点上。</p>

<p>乐观让人笑着面对生活。生活总归是有各种委屈、各种阻力，笑脸的背后，时常是受伤的心，区别在于受伤的心能埋得多深。我宁愿相信，乐观是因为能接受苦，能从苦中找到快乐，而不是没有苦。</p>

<p>时常的，我被不好的状态左右。那是种很奇怪的感觉，是面对压力的逃避、拖延，独自缩在没有人看得见的角落，在电脑屏幕前刷着网页，时间慢慢流走。然后心情越来越差，因为一事无成的颓废感。我是闲不下来的人。是的，『什么也不做的痛苦，比任何其他痛苦更加深刻』！</p>

<p>曾经在ASES的分享会上，听dd讲起过<a href="http://cuitianyi.com/blog/authentic-happiness-%E8%AF%BB%E4%B9%A6%E6%80%BB%E7%BB%93/">『积极心理学』</a>。其中有个观点是：『享乐是心灵资本的消费，而心流中的满足则是心灵资本的投资』。简单的讲，创造价值的事情会让我得到心流的满足，而简单的娱乐则会消费这种满足感。或许当两者之差为负的时候，我就感受到了那种空虚和煎熬，不止什么都不做，还消费了更多。</p>

<p>正是对社会责任的追求，老俞没有沉浸再新东方的飞速发展中。对他而言，现在的新东方的经营一切都要权衡公司的利益和教育理念。虽然他的新东方充满了实用主义和人文情怀，虽然他能让新东方尽到企业的社会责任，但这依然不是他想要的。他正在筹划办私立高校，用他的教育理念，给中国的教育发展贡献力量。这是中国的希望。</p>

<p>最后，以老俞的一句话结尾：</p>

<blockquote><p>人生的苦难肯定是没有尽头的，人要做的是在苦难中奋发起来，做自己能够做的和应该做的事儿，这就是我的世界观。</p></blockquote>
]]></content>
  </entry>
  
</feed>
