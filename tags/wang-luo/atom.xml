<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: 网络 | Biaobiaoqi的博客]]></title>
  <link href="http://biaobiaoqi.github.io/tags/wang-luo/atom.xml" rel="self"/>
  <link href="http://biaobiaoqi.github.io/"/>
  <updated>2016-04-19T00:27:46+08:00</updated>
  <id>http://biaobiaoqi.github.io/</id>
  <author>
    <name><![CDATA[Biaobiaoqi]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[关于科学上网]]></title>
    <link href="http://biaobiaoqi.github.io/blog/2013/09/10/scientifically-surfing-the-internet/"/>
    <updated>2013-09-10T12:11:00+08:00</updated>
    <id>http://biaobiaoqi.github.io/blog/2013/09/10/scientifically-surfing-the-internet</id>
    <content type="html"><![CDATA[<p>为了防止被某墙fuck，暂且称其为『很棒的防火墙』吧，你懂的-,-.</p>

<p>在teahour上听了 <a href="http://teahour.fm/2013/07/09/gfw-and-vpncloud.html">***技术研究和云梯产品故事</a>，有感于之前几天修改本地hosts的策略再次失效，切换到goagent模式，在此，基于这期teahour对<a href="https://twitter.com/kgen">@Kgen</a>的访谈内容，对很棒的防火墙做份简单的笔记：</p>

<p>很棒的防火墙有用大量的服务器，并由一大只团队维护和升级。它的目的是让大部分的互联网用户无法接触到“有害”的网络资源，“净化”国内的网络环境。同时，它需要尽可能的减少商业上的影响，比如为了不阻碍外企的VPN工作环境，很棒的防火墙并没有直接对VPN进行封堵。在这个前提上，留给我们的可能性也是一直存在的。</p>

<h2>防御策略</h2>

<p>很棒的防火墙一直在茁壮成长着。一个方校长倒下了，千千万万X校长站起来了。他们背负着一辈子的骂名，忍辱负重的为祖国奉献着生命，死而后已。总之，前赴后继的技术人员不断的在补全着很棒的防火墙的防御规则，因此，应对策略也需要不断的调整和改进。整体来看，防御策略主要有如下几种：</p>

<ul>
<li><h4>1.DNS污染</h4>

<p>  DNS协议本身并没有安全认证功能，很棒的防火墙检测到相应dns请求后，会返回一个错误的IP地址，造成无法正常访问。解决方案有使用第三方DNS服务或者修改本地hosts文件。</p></li>
<li><h4>2.IP拦截</h4>

<p>  对于特定敏感网站，很棒的防火墙会直接侦察到相应的IP地址施行拦截。简单的DNS修改无法解决IP层的问题，只能通过代理等手段绕过这些IP进行访问。常用的应对方式有：使用VPN、ssh代理和GAE上搭建<a href="http://zhoudemin.com/goagent.html">GoAgent</a>服务等。至于为什么一些国内用户说自己的GoAgent速度很快，而又有很多人在抱怨自己的GAE速度很慢，原因在于GAE应用会不受控制的部署到Google不同的服务器节点上，而国内网络环境复杂，不同地区的网络连入国外不同服务器的线路不尽相同，速度也差异明显。同样的情况也发生在VPS的使用速度差异上。</p></li>
</ul>


<!--more-->


<ul>
<li><h4>3.端口封锁：比如ssh端口</h4>

<p>  <a href="http://biaobiaoqi.github.io/blog/2013/04/19/use-ssh/">ssh</a>是一种安全的加密的网络通信协议，通过ssh可以施行对远程主机的操控。部分网民通过在很棒的防火墙外的VPS（虚拟主机）做代理，使用ssh服务上网。针对这一情况，最近两年，很棒的防火墙开始实现对ssh端口的封锁。当ssh链接被鉴定为非正常流量，则相应端口会受到封锁。如果频繁切换端口，可能整个IP都将被封锁。</p></li>
<li><h4>4.http请求明文内容检测和中断</h4>

<p>  使用Google搜索某些敏感内容时，链接会被重置，就是因为很棒的防火墙侦测到了敏感内容，给用户浏览器发送了重置消息，扰乱了链接。</p></li>
<li><h4>5.https间歇性中断</h4>

<p>  https的链接本身是安全的、加密的。在无法侦测内容的前提下，很棒的防火墙采用了不讲道理的间歇性中断策略。</p></li>
</ul>


<p>更多关于很棒的防火墙的资料，请先翻过墙去查看;)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[关于科学上网]]></title>
    <link href="http://biaobiaoqi.github.io/blog/2013/09/10/scientifically-surfing-the-internet/"/>
    <updated>2013-09-10T12:11:00+08:00</updated>
    <id>http://biaobiaoqi.github.io/blog/2013/09/10/scientifically-surfing-the-internet</id>
    <content type="html"><![CDATA[<p>为了防止被某墙fuck，暂且称其为『很棒的防火墙』吧，你懂的-,-.</p>

<p>在teahour上听了 <a href="http://teahour.fm/2013/07/09/gfw-and-vpncloud.html">***技术研究和云梯产品故事</a>，有感于之前几天修改本地hosts的策略再次失效，切换到goagent模式，在此，基于这期teahour对<a href="https://twitter.com/kgen">@Kgen</a>的访谈内容，对很棒的防火墙做份简单的笔记：</p>

<p>很棒的防火墙有用大量的服务器，并由一大只团队维护和升级。它的目的是让大部分的互联网用户无法接触到“有害”的网络资源，“净化”国内的网络环境。同时，它需要尽可能的减少商业上的影响，比如为了不阻碍外企的VPN工作环境，很棒的防火墙并没有直接对VPN进行封堵。在这个前提上，留给我们的可能性也是一直存在的。</p>

<h2>防御策略</h2>

<p>很棒的防火墙一直在茁壮成长着。一个方校长倒下了，千千万万X校长站起来了。他们背负着一辈子的骂名，忍辱负重的为祖国奉献着生命，死而后已。总之，前赴后继的技术人员不断的在补全着很棒的防火墙的防御规则，因此，应对策略也需要不断的调整和改进。整体来看，防御策略主要有如下几种：</p>

<ul>
<li><h4>1.DNS污染</h4>

<p>  DNS协议本身并没有安全认证功能，很棒的防火墙检测到相应dns请求后，会返回一个错误的IP地址，造成无法正常访问。解决方案有使用第三方DNS服务或者修改本地hosts文件。</p></li>
<li><h4>2.IP拦截</h4>

<p>  对于特定敏感网站，很棒的防火墙会直接侦察到相应的IP地址施行拦截。简单的DNS修改无法解决IP层的问题，只能通过代理等手段绕过这些IP进行访问。常用的应对方式有：使用VPN、ssh代理和GAE上搭建<a href="http://zhoudemin.com/goagent.html">GoAgent</a>服务等。至于为什么一些国内用户说自己的GoAgent速度很快，而又有很多人在抱怨自己的GAE速度很慢，原因在于GAE应用会不受控制的部署到Google不同的服务器节点上，而国内网络环境复杂，不同地区的网络连入国外不同服务器的线路不尽相同，速度也差异明显。同样的情况也发生在VPS的使用速度差异上。</p></li>
</ul>


<!--more-->


<ul>
<li><h4>3.端口封锁：比如ssh端口</h4>

<p>  <a href="http://biaobiaoqi.github.io/blog/2013/04/19/use-ssh/">ssh</a>是一种安全的加密的网络通信协议，通过ssh可以施行对远程主机的操控。部分网民通过在很棒的防火墙外的VPS（虚拟主机）做代理，使用ssh服务上网。针对这一情况，最近两年，很棒的防火墙开始实现对ssh端口的封锁。当ssh链接被鉴定为非正常流量，则相应端口会受到封锁。如果频繁切换端口，可能整个IP都将被封锁。</p></li>
<li><h4>4.http请求明文内容检测和中断</h4>

<p>  使用Google搜索某些敏感内容时，链接会被重置，就是因为很棒的防火墙侦测到了敏感内容，给用户浏览器发送了重置消息，扰乱了链接。</p></li>
<li><h4>5.https间歇性中断</h4>

<p>  https的链接本身是安全的、加密的。在无法侦测内容的前提下，很棒的防火墙采用了不讲道理的间歇性中断策略。</p></li>
</ul>


<p>更多关于很棒的防火墙的资料，请先翻过墙去查看;)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[关于科学上网]]></title>
    <link href="http://biaobiaoqi.github.io/blog/2013/09/10/scientifically-surfing-the-internet/"/>
    <updated>2013-09-10T12:11:00+08:00</updated>
    <id>http://biaobiaoqi.github.io/blog/2013/09/10/scientifically-surfing-the-internet</id>
    <content type="html"><![CDATA[<p>为了防止被某墙fuck，暂且称其为『很棒的防火墙』吧，你懂的-,-.</p>

<p>在teahour上听了 <a href="http://teahour.fm/2013/07/09/gfw-and-vpncloud.html">***技术研究和云梯产品故事</a>，有感于之前几天修改本地hosts的策略再次失效，切换到goagent模式，在此，基于这期teahour对<a href="https://twitter.com/kgen">@Kgen</a>的访谈内容，对很棒的防火墙做份简单的笔记：</p>

<p>很棒的防火墙有用大量的服务器，并由一大只团队维护和升级。它的目的是让大部分的互联网用户无法接触到“有害”的网络资源，“净化”国内的网络环境。同时，它需要尽可能的减少商业上的影响，比如为了不阻碍外企的VPN工作环境，很棒的防火墙并没有直接对VPN进行封堵。在这个前提上，留给我们的可能性也是一直存在的。</p>

<h2>防御策略</h2>

<p>很棒的防火墙一直在茁壮成长着。一个方校长倒下了，千千万万X校长站起来了。他们背负着一辈子的骂名，忍辱负重的为祖国奉献着生命，死而后已。总之，前赴后继的技术人员不断的在补全着很棒的防火墙的防御规则，因此，应对策略也需要不断的调整和改进。整体来看，防御策略主要有如下几种：</p>

<ul>
<li><h4>1.DNS污染</h4>

<p>  DNS协议本身并没有安全认证功能，很棒的防火墙检测到相应dns请求后，会返回一个错误的IP地址，造成无法正常访问。解决方案有使用第三方DNS服务或者修改本地hosts文件。</p></li>
<li><h4>2.IP拦截</h4>

<p>  对于特定敏感网站，很棒的防火墙会直接侦察到相应的IP地址施行拦截。简单的DNS修改无法解决IP层的问题，只能通过代理等手段绕过这些IP进行访问。常用的应对方式有：使用VPN、ssh代理和GAE上搭建<a href="http://zhoudemin.com/goagent.html">GoAgent</a>服务等。至于为什么一些国内用户说自己的GoAgent速度很快，而又有很多人在抱怨自己的GAE速度很慢，原因在于GAE应用会不受控制的部署到Google不同的服务器节点上，而国内网络环境复杂，不同地区的网络连入国外不同服务器的线路不尽相同，速度也差异明显。同样的情况也发生在VPS的使用速度差异上。</p></li>
</ul>


<!--more-->


<ul>
<li><h4>3.端口封锁：比如ssh端口</h4>

<p>  <a href="http://biaobiaoqi.github.io/blog/2013/04/19/use-ssh/">ssh</a>是一种安全的加密的网络通信协议，通过ssh可以施行对远程主机的操控。部分网民通过在很棒的防火墙外的VPS（虚拟主机）做代理，使用ssh服务上网。针对这一情况，最近两年，很棒的防火墙开始实现对ssh端口的封锁。当ssh链接被鉴定为非正常流量，则相应端口会受到封锁。如果频繁切换端口，可能整个IP都将被封锁。</p></li>
<li><h4>4.http请求明文内容检测和中断</h4>

<p>  使用Google搜索某些敏感内容时，链接会被重置，就是因为很棒的防火墙侦测到了敏感内容，给用户浏览器发送了重置消息，扰乱了链接。</p></li>
<li><h4>5.https间歇性中断</h4>

<p>  https的链接本身是安全的、加密的。在无法侦测内容的前提下，很棒的防火墙采用了不讲道理的间歇性中断策略。</p></li>
</ul>


<p>更多关于很棒的防火墙的资料，请先翻过墙去查看;)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[关于毕业季照片分享的思考]]></title>
    <link href="http://biaobiaoqi.github.io/blog/2013/05/25/some-ideas-about-using-bt-protocol-to-sync/"/>
    <updated>2013-05-25T22:47:00+08:00</updated>
    <id>http://biaobiaoqi.github.io/blog/2013/05/25/some-ideas-about-using-bt-protocol-to-sync</id>
    <content type="html"><![CDATA[<h2>背景</h2>

<p>毕业季到了，女朋友跟班里同学们一起拍了很多照片。由于照片分散在不同的人的手机、相机里，她也无法立即给我传来她的照片。这个情景一年前我也遇到过，只是当时自己比较忙，加上考虑着还会在本校读研，也没太在意毕业季照片的手机这一需求，以至于到现在我的电脑里甚至没有一张我穿学士服的照片:-=。而现在，当我想看看gf的照片时，这个需求横亘在我面前，让我特别的想解决掉它。</p>

<p>让我们从事实出发，理清问题的思路。</p>

<h2>需求的产生</h2>

<p>大学生拍毕业季照的现状：</p>

<ul>
<li>1.大学生在毕业季拍照留念是刚需，几乎平日爱拍照、不爱拍照的所有人都会参与其中。</li>
<li>2.拍照一般以小团体为基本单元进行。多是班级、社团这种常见的凝聚力较强的团体。</li>
<li>3.随着科技的发展和生活水平的提高，越来越多的人具备了拍出高质量照片的设备和实力。</li>
</ul>


<p>由于这种以小团体为单位的照片的大量产生，每个团体中的照片会交叉散落在较多人手中。在这种分散的格局面前，单独挑选出自己的照片并保存的成本巨大，直接导致了大家最终需求的统一：</p>

<ul>
<li>将所有的照片分发到所有人手中。</li>
</ul>


<h2>原有解决方案</h2>

<p>现有的解决方案主要方案归纳为如下四种：</p>

<ul>
<li><p>1.用移动硬盘等设备人力拷贝</p>

<p>  这种方式太过古老和原始，缺点费时费力。</p></li>
<li><p>2.使用公邮、网盘、QQ群共享等方式统一上传、下载</p>

<p>  主要缺点是外网网速限制；另外，网速的限制让用户上传和下载的门槛变高，影响了上传积极性，如果有人迟迟不上传，最终下载完整数据的时间也会一直拖延，带来消极的体验；如果注册一次性账号，这也不见得是环保的行为（或许这想法有点数据洁癖吧>&lt;），如果使用非一次性账号，那么权限管理将比较头疼。</p></li>
<li><p>3.使用内网BT资源站分别打包上传、下载</p>

<p>  优点是利用了内网网速的优势。缺点是每个人都打包做种，会让资源分散的很厉害，难于汇集。且做种等步骤对于部分用户而言，有操作门槛。</p></li>
<li><p>4.先使用1中方法，统一手机照片数据，然后按照2或3的方法发布数据</p>

<p>  这大概是最靠谱的方式了，缺点集中在需要有人费时费力的手机数据上。当然，如果班里有一个任劳任怨的好班长，这个问题就解决了。</p></li>
</ul>


<h4>总结：</h4>

<p>对于一个懒人而言，现有的解决方案都是蹩脚的。这些解决方案都不约而同的希望首先将数据聚合到一个外部空间中，然后再统一的分发给大家。这个步骤必要吗？实际上，我们只是需要每个人都方便、快捷的获得所有照片。</p>

<h2>一个简单的设计</h2>

<p>我将问题抽象为：</p>

<ul>
<li>完整的数据分散在10至20个数据拥有者手中，需要通过一定手段，让每个个体都不重复的拥有完整的数据。</li>
</ul>


<p>由于外网网速的限制，基于校园内网建立的工具就有了天然的优势。但如果使用内网，就不得不抛弃各大公司免费提供的邮箱存储空间、网盘存储空间。而校内的资源是有限的，没有自己的服务器，没有足够的空间存储大家的数据，这也就迫使我们考虑到了p2p的系统架构。于是，有了这样的解决方案，设定代号为BBT：</p>

<ul>
<li>PC机安装BBT工具软件后，可以设定<code>共享目录</code>和对应的<code>分享ID</code></li>
<li>放入特定<code>共享目录</code>的文件，将使用基于p2p同步的方式，在拥有相同的<code>分享ID</code>的<code>共享目录</code>间同步数据，目的是让所有人都获得到每个人的数据</li>
</ul>


<p>在跟阿豪童鞋的交流中，他建议为了进一步简化用户操作，可以尝试这样一种体验方式：</p>

<ul>
<li>班级内所有人在同一个链接下载工具软件。保证这一链接下载的软件能互相通信，实现数据同步。这杨就节省了用户自己设定相同的<code>分享ID</code>的流程，而将这一过程转移到班长请求下载链接的过程中。</li>
</ul>


<p>确实够简洁，很赞，实现成本还需要调研。</p>

<h6>BitTorrent Sync</h6>

<p>在构思的过程中，突然想起前几天在start up news上看到了一个基于BT协议的同步软件<a href="http://labs.bittorrent.com/experiments/sync.html">BitTorrent Sync</a>。</p>

<p><img src="http://labs.bittorrent.com/img/wide/sync.png" title="BitTorrent Sync" alt="BitTorrent Sync" /></p>

<p>它的实现方式大概是我们所需要的。可惜的是，由于它的功能全面，界面略显复杂。而同时，它并没有开放二次开发接口。</p>

<p>或许我需要自己搭建一个p2p的系统？</p>

<h6>PS:</h6>

<p>BT的优势，在于利用了所有节点的存储和传输能力，节点数量越多，下载越快</p>

<p>BitTorrent  Sync的优势，则在于能动态的集合分散在不同节点中的数据</p>

<p>感觉这种去中心化的分布式系统，前景大大的有啊;)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[关于毕业季照片分享的思考]]></title>
    <link href="http://biaobiaoqi.github.io/blog/2013/05/25/some-ideas-about-using-bt-protocol-to-sync/"/>
    <updated>2013-05-25T22:47:00+08:00</updated>
    <id>http://biaobiaoqi.github.io/blog/2013/05/25/some-ideas-about-using-bt-protocol-to-sync</id>
    <content type="html"><![CDATA[<h2>背景</h2>

<p>毕业季到了，女朋友跟班里同学们一起拍了很多照片。由于照片分散在不同的人的手机、相机里，她也无法立即给我传来她的照片。这个情景一年前我也遇到过，只是当时自己比较忙，加上考虑着还会在本校读研，也没太在意毕业季照片的手机这一需求，以至于到现在我的电脑里甚至没有一张我穿学士服的照片:-=。而现在，当我想看看gf的照片时，这个需求横亘在我面前，让我特别的想解决掉它。</p>

<p>让我们从事实出发，理清问题的思路。</p>

<h2>需求的产生</h2>

<p>大学生拍毕业季照的现状：</p>

<ul>
<li>1.大学生在毕业季拍照留念是刚需，几乎平日爱拍照、不爱拍照的所有人都会参与其中。</li>
<li>2.拍照一般以小团体为基本单元进行。多是班级、社团这种常见的凝聚力较强的团体。</li>
<li>3.随着科技的发展和生活水平的提高，越来越多的人具备了拍出高质量照片的设备和实力。</li>
</ul>


<p>由于这种以小团体为单位的照片的大量产生，每个团体中的照片会交叉散落在较多人手中。在这种分散的格局面前，单独挑选出自己的照片并保存的成本巨大，直接导致了大家最终需求的统一：</p>

<ul>
<li>将所有的照片分发到所有人手中。</li>
</ul>


<h2>原有解决方案</h2>

<p>现有的解决方案主要方案归纳为如下四种：</p>

<ul>
<li><p>1.用移动硬盘等设备人力拷贝</p>

<p>  这种方式太过古老和原始，缺点费时费力。</p></li>
<li><p>2.使用公邮、网盘、QQ群共享等方式统一上传、下载</p>

<p>  主要缺点是外网网速限制；另外，网速的限制让用户上传和下载的门槛变高，影响了上传积极性，如果有人迟迟不上传，最终下载完整数据的时间也会一直拖延，带来消极的体验；如果注册一次性账号，这也不见得是环保的行为（或许这想法有点数据洁癖吧>&lt;），如果使用非一次性账号，那么权限管理将比较头疼。</p></li>
<li><p>3.使用内网BT资源站分别打包上传、下载</p>

<p>  优点是利用了内网网速的优势。缺点是每个人都打包做种，会让资源分散的很厉害，难于汇集。且做种等步骤对于部分用户而言，有操作门槛。</p></li>
<li><p>4.先使用1中方法，统一手机照片数据，然后按照2或3的方法发布数据</p>

<p>  这大概是最靠谱的方式了，缺点集中在需要有人费时费力的手机数据上。当然，如果班里有一个任劳任怨的好班长，这个问题就解决了。</p></li>
</ul>


<h4>总结：</h4>

<p>对于一个懒人而言，现有的解决方案都是蹩脚的。这些解决方案都不约而同的希望首先将数据聚合到一个外部空间中，然后再统一的分发给大家。这个步骤必要吗？实际上，我们只是需要每个人都方便、快捷的获得所有照片。</p>

<h2>一个简单的设计</h2>

<p>我将问题抽象为：</p>

<ul>
<li>完整的数据分散在10至20个数据拥有者手中，需要通过一定手段，让每个个体都不重复的拥有完整的数据。</li>
</ul>


<p>由于外网网速的限制，基于校园内网建立的工具就有了天然的优势。但如果使用内网，就不得不抛弃各大公司免费提供的邮箱存储空间、网盘存储空间。而校内的资源是有限的，没有自己的服务器，没有足够的空间存储大家的数据，这也就迫使我们考虑到了p2p的系统架构。于是，有了这样的解决方案，设定代号为BBT：</p>

<ul>
<li>PC机安装BBT工具软件后，可以设定<code>共享目录</code>和对应的<code>分享ID</code></li>
<li>放入特定<code>共享目录</code>的文件，将使用基于p2p同步的方式，在拥有相同的<code>分享ID</code>的<code>共享目录</code>间同步数据，目的是让所有人都获得到每个人的数据</li>
</ul>


<p>在跟阿豪童鞋的交流中，他建议为了进一步简化用户操作，可以尝试这样一种体验方式：</p>

<ul>
<li>班级内所有人在同一个链接下载工具软件。保证这一链接下载的软件能互相通信，实现数据同步。这杨就节省了用户自己设定相同的<code>分享ID</code>的流程，而将这一过程转移到班长请求下载链接的过程中。</li>
</ul>


<p>确实够简洁，很赞，实现成本还需要调研。</p>

<h6>BitTorrent Sync</h6>

<p>在构思的过程中，突然想起前几天在start up news上看到了一个基于BT协议的同步软件<a href="http://labs.bittorrent.com/experiments/sync.html">BitTorrent Sync</a>。</p>

<p><img src="http://labs.bittorrent.com/img/wide/sync.png" title="BitTorrent Sync" alt="BitTorrent Sync" /></p>

<p>它的实现方式大概是我们所需要的。可惜的是，由于它的功能全面，界面略显复杂。而同时，它并没有开放二次开发接口。</p>

<p>或许我需要自己搭建一个p2p的系统？</p>

<h6>PS:</h6>

<p>BT的优势，在于利用了所有节点的存储和传输能力，节点数量越多，下载越快</p>

<p>BitTorrent  Sync的优势，则在于能动态的集合分散在不同节点中的数据</p>

<p>感觉这种去中心化的分布式系统，前景大大的有啊;)</p>
]]></content>
  </entry>
  
</feed>
